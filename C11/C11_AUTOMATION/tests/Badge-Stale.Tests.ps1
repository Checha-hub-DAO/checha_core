#requires -Version 5.1
$ErrorActionPreference = 'Stop'

# ---- –®–ª—è—Ö–∏ (script scope) -----------------------------------------------
$script:root      = "C:\CHECHA_CORE"
$script:panel     = Join-Path $script:root "C06_FOCUS\CONTROL_PANEL.md"
$script:status    = Join-Path $script:root "C06_FOCUS\_runall_status.json"
$script:updScript = Join-Path $script:root "C11\C11_AUTOMATION\tools\Update-ControlPanel.ps1"

# ---- –°–∞–Ω—ñ—Ç–∞—Ä–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —à–ª—è—Ö—ñ–≤ -----------------------------------------
if (-not (Test-Path $script:updScript)) {
  Describe "STATUS_BADGE stale check" {
    It "SKIPPED: Update-ControlPanel.ps1 not found at $($script:updScript)" -Skip {
      $false | Should -BeTrue
    }
  }
  return
}

# –ì–∞—Ä–∞–Ω—Ç—É—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–µ–∫–∏/—Ñ–∞–π–ª—ñ–≤ (—É discovery —Ñ–∞–∑—ñ, –∞–ª–µ –ø–∏—à–µ–º–æ $script:)
$script:panelDir = Split-Path $script:panel -Parent
if (-not (Test-Path $script:panelDir)) { New-Item -ItemType Directory -Path $script:panelDir -Force | Out-Null }
if (-not (Test-Path $script:panel)) {
@"
# üõ† –ü–∞–Ω–µ–ª—å –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è ‚Äî v1.0
–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: {{DATE}}
–°—Ç–∞—Ç—É—Å: {{STATUS_BADGE}}

## 1. üîç –°—Ç–∞—Ç—É—Å –°–∏—Å—Ç–µ–º–∏
- –û—Å—Ç–∞–Ω–Ω—î RunAll: {{AUTO:last_runall}}
"@ | Set-Content -Path $script:panel -Encoding utf8BOM
}

if (-not (Test-Path $script:status)) {
  $o = [ordered]@{
    ts           = (Get-Date).ToString("o")
    ok           = $true
    duration_sec = "0.1"
    only         = @()
    force        = $false
    user         = "$env:USERNAME"
  } | ConvertTo-Json -Depth 5
  [System.IO.File]::WriteAllText($script:status, $o, [System.Text.UTF8Encoding]::new($true))
}

Describe "STATUS_BADGE shows üü° when _runall_status.json is older than 24h" {

  BeforeAll {
    # —Å—Ç–∞—Ä–∏–º–æ ts –Ω–∞ 49 –≥–æ–¥
    $obj = Get-Content $script:status -Raw -Encoding UTF8 | ConvertFrom-Json
    $obj.ts = (Get-Date).AddHours(-49).ToString("o")
    [System.IO.File]::WriteAllText($script:status, ($obj | ConvertTo-Json -Depth 5), [System.Text.UTF8Encoding]::new($true))

    # –æ–Ω–æ–≤–ª—é—î–º–æ –ø–∞–Ω–µ–ª—å
    & $script:updScript | Out-Null
  }

  It "Panel path is valid" {
    $script:panel | Should -Not -BeNullOrEmpty
    (Test-Path $script:panel) | Should -BeTrue
  }

  It "Status path is valid" {
    $script:status | Should -Not -BeNullOrEmpty
    (Test-Path $script:status) | Should -BeTrue
  }

  It "Panel contains yellow stale badge" {
    $txt = Get-Content $script:panel -Raw -Encoding UTF8
    $txt | Should -Match '–°—Ç–∞—Ç—É—Å:\s*üü°'
  }

  AfterAll {
    # –≤—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Å–≤—ñ–∂–∏–π ts
    $obj = Get-Content $script:status -Raw -Encoding UTF8 | ConvertFrom-Json
    $obj.ts = (Get-Date).ToString("o")
    [System.IO.File]::WriteAllText($script:status, ($obj | ConvertTo-Json -Depth 5), [System.Text.UTF8Encoding]::new($true))
    & $script:updScript | Out-Null
  }
}
