<#
.SYNOPSIS
  –Ñ–¥–∏–Ω–∏–π wrapper –¥–ª—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –¥—ñ–∞–ª–æ–≥—É —Ç–∞ —Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä–∞.

.DESCRIPTION
  –í–∏–∫–ª–∏–∫–∞—î Get-DialogCount.ps1 —ñ TrafficLight-Helper.ps1:
    - Start   : –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ 1 —ñ –∑–∞—Ñ—ñ–∫—Å—É–≤–∞—Ç–∏ üü¢/üü°/üî¥ (Mode=Start)
    - PlusOne : —ñ–Ω–∫—Ä–µ–º–µ–Ω—Ç—É–≤–∞—Ç–∏ –Ω–∞ 1 —ñ –∑—Ä–æ–±–∏—Ç–∏ –ø—Ä–æ–º—ñ–∂–Ω–∏–π –∞–ø–¥–µ–π—Ç (Mode=Update)
    - End     : –∑–∞—Ñ—ñ–∫—Å—É–≤–∞—Ç–∏ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω (Mode=End)
    - Status  : –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π Count —ñ –∫–æ–ª—ñ—Ä –±–µ–∑ –∑–º—ñ–Ω

.PARAMETER Action
  Start | PlusOne | End | Status

.PARAMETER Root
  –ö–æ—Ä—ñ–Ω—å CHECHA_CORE (default: C:\CHECHA_CORE)

.PARAMETER Quiet
  –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –∫–æ–Ω—Å–æ–ª—å–Ω–∏–π –≤–∏–≤—ñ–¥ (–∞–ª–µ ExitCode –∑–∞–ª–∏—à–∏—Ç—å—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–∏–º).

.OUTPUTS
  Stdout (–∑–∞ –ø–æ—Ç—Ä–µ–±–∏) + ExitCode:
    - Start/PlusOne/Status: 0=OK
    - End/Update (–≤—Å–µ—Ä–µ–¥–∏–Ω—ñ): 0=Green, 1=Yellow, 2=Red
#>

[CmdletBinding()]
Param(
  [Parameter(Mandatory=$true)]
  [ValidateSet('Start','PlusOne','End','Status')]
  [string]$Action,

  [string]$Root = "C:\CHECHA_CORE",
  [switch]$Quiet
)

Set-StrictMode -Version Latest
$ErrorActionPreference = 'Stop'

function Path-Tool([string]$rel) { return (Join-Path $Root "C11\C11_AUTOMATION\tools\$rel") }
function Ensure-File([string]$path,[string]$name) {
  if (-not (Test-Path $path)) {
    throw "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ $name: $path"
  }
}

# –õ–æ–∫–∞—Ü—ñ—ó —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
$getDlg = Path-Tool "Get-DialogCount.ps1"
$traf   = Path-Tool "TrafficLight-Helper.ps1"
Ensure-File $getDlg "Get-DialogCount.ps1"
Ensure-File $traf   "TrafficLight-Helper.ps1"

# –î–æ–ø–æ–º—ñ–∂–Ω—ñ
function OutI($msg) { if (-not $Quiet) { Write-Host $msg } }

# === –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü—ñ—è –¥—ñ–π ===
switch ($Action) {
  'Start' {
    $cnt = pwsh -NoProfile -File $getDlg -Root $Root -Set 1
    OutI "[Start] Count=$cnt"
    # –§—ñ–∫—Å—É—î–º–æ –ø–æ—á–∞—Ç–æ–∫ —Å–µ—Å—ñ—ó
    $exit = (pwsh -NoProfile -File $traf -Mode Start -Count $cnt -Root $Root; $LASTEXITCODE)
    exit $exit
  }

  'PlusOne' {
    $cnt = pwsh -NoProfile -File $getDlg -Root $Root -Increment
    OutI "[PlusOne] Count=$cnt"
    # –ü—Ä–æ–º—ñ–∂–Ω–∏–π –∞–ø–¥–µ–π—Ç —Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä–∞
    $exit = (pwsh -NoProfile -File $traf -Mode Update -Count $cnt -Root $Root; $LASTEXITCODE)
    exit $exit
  }

  'End' {
    $cnt = pwsh -NoProfile -File $getDlg -Root $Root
    OutI "[End] Count=$cnt"
    $exit = (pwsh -NoProfile -File $traf -Mode End -Count $cnt -Root $Root; $LASTEXITCODE)
    exit $exit
  }

  'Status' {
    $cnt = pwsh -NoProfile -File $getDlg -Root $Root
    # –í–∏–∑–Ω–∞—á–∏–º–æ –∫–æ–ª—ñ—Ä –ª–æ–∫–∞–ª—å–Ω–æ (–¥–∑–µ—Ä–∫–∞–ª—å–Ω–æ –¥–æ Helper)
    [int]$n = $cnt
    $color = if ($n -ge 50) { 'Red' } elseif ($n -ge 30) { 'Yellow' } else { 'Green' }
    $icon  = if ($color -eq 'Red') {'üî¥'} elseif ($color -eq 'Yellow') {'üü°'} else {'üü¢'}
    OutI ("[Status] Count={0} Color={1} {2}" -f $n, $color, $icon)
    exit 0
  }
}
