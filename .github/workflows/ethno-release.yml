name: ETHNO Release

on:
  push:
    tags: ['ethno-v*']
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ethno-release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO: ${{ github.repository }}
      TAG: ${{ github.ref_name }}
      VERSION: ${{ github.ref_name }}
      ETHNO_ROOT: ${{ github.workspace }}\C12\ETHNO

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute VERSION from TAG
        shell: pwsh
        run: |
          $ver = "${env:TAG}" -replace '^ethno-',''
          echo "VERSION=$ver" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "Resolved VERSION = $ver"

      - name: Show environment
        shell: pwsh
        run: |
          Write-Host "REPO       = $env:REPO"
          Write-Host "TAG        = $env:TAG"
          Write-Host "VERSION    = $env:VERSION"
          Write-Host "ETHNO_ROOT = $env:ETHNO_ROOT"
          if (-not (Test-Path $env:ETHNO_ROOT)) { throw "ETHNO_ROOT not found: $env:ETHNO_ROOT" }

      # --- NEW: ffmpeg for GIF -> MP4 ---
      - name: Install ffmpeg (choco)
        shell: pwsh
        run: |
          choco install ffmpeg --no-progress -y
          $ff = (Get-Command ffmpeg).Source
          if (-not $ff) { throw "ffmpeg not found in PATH" }
          Write-Host "ffmpeg: $ff"

      # --- NEW: export MP4s (СЏРєС‰Рѕ С” СЃРєСЂРёРїС‚) ---
      # РћС‡С–РєСѓС”С‚СЊСЃСЏ СЃРєСЂРёРїС‚ tools/export_mp4.ps1, СЏРєРёР№ С‡РёС‚Р°С” Р· РґР¶РµСЂРµР»Р° .gif С– РєР»Р°РґРµ .mp4 РІ Р·Р°РґР°РЅСѓ С‚РµРєСѓ
      - name: Export MP4 symbols (optional)
        shell: pwsh
        run: |
          $export = Join-Path $env:GITHUB_WORKSPACE 'tools\export_mp4.ps1'
          if (Test-Path $export -PathType Leaf) {
            Write-Host "Running export_mp4.ps1вЂ¦"
            pwsh -NoProfile -ExecutionPolicy Bypass -File $export -Overwrite
          } else {
            Write-Host "(i) tools/export_mp4.ps1 not found вЂ” skip MP4 export"
          }

      - name: Build ETHNO
        shell: pwsh
        run: |
          pwsh -NoProfile -ExecutionPolicy Bypass `
            -File ".\Build-ETHNO.ps1" `
            -Root "$env:ETHNO_ROOT" -Version "$env:VERSION"

      - name: Verify ETHNO
        shell: pwsh
        run: |
          pwsh -NoProfile -ExecutionPolicy Bypass `
            -File "$env:ETHNO_ROOT\Verify-ETHNO.ps1" `
            -Root "$env:ETHNO_ROOT" -Strict

      # РџСѓР±Р»С–РєР°С†С–СЏ: ZIP + README + CHECKSUMS + MP4 (С‡РµСЂРµР· UploadExtra)
      - name: Publish release (ZIP + README + CHECKSUMS + MP4)
        shell: pwsh
        run: |
          # РЎРїСЂРѕР±СѓС”РјРѕ Р·РЅР°Р№С‚Рё MP4 РїС–СЃР»СЏ РµРєСЃРїРѕСЂС‚Сѓ РІ СЂРµРїРѕ. РџС–РґР»Р°С€С‚СѓР№ РїР°С‚РµСЂРЅРё РїС–Рґ СЃРІРѕСЋ СЃС‚СЂСѓРєС‚СѓСЂСѓ:
          $mp4A = Join-Path $env:GITHUB_WORKSPACE 'c02_pack\C02_symbol_pack_v1.0\*.mp4'
          $mp4B = Join-Path $env:ETHNO_ROOT 'Symbols\*.mp4'   # СЏРєС‰Рѕ СЃРєСЂРёРїС‚ РєР»Р°РґРµ РїРѕСЂСѓС‡ С–Р· СЃРёРјРІРѕР»Р°РјРё

          $uploadExtra = @()
          if (Test-Path $mp4A) { $uploadExtra += $mp4A }
          if (Test-Path $mp4B) { $uploadExtra += $mp4B }

          $extraArg = @()
          if ($uploadExtra.Count -gt 0) {
            $extraArg = @('-UploadExtra', ($uploadExtra -join ','))
          } else {
            Write-Host "(i) No MP4 found to upload вЂ” proceeding with ZIP/README/CHECKSUMS only"
          }

          pwsh -NoProfile -ExecutionPolicy Bypass `
            -File ".\Publish-ETHNO.ps1" `
            -EthnoRoot "$env:ETHNO_ROOT" `
            -Repo "$env:REPO" `
            -Tag "$env:TAG" `
            -Title "ETHNO $env:VERSION" `
            -AutoFillNotes -StrictVerify @extraArg
