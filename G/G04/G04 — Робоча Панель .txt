G04 ‚Äî –†–æ–±–æ—á–∞ –ü–∞–Ω–µ–ª—å (MVP v1.0)
–°—Ç–∞—Ç—É—Å: ACTIVE ‚Ä¢ –í–µ—Ä—Å—ñ—è: v1.0 ‚Ä¢ –î–∞—Ç–∞/—á–∞—Å (–ö–∏—ó–≤): 2025‚Äë09‚Äë03 ‚Ä¢ –í–ª–∞—Å–Ω–∏–∫: G04‚ÄëCoordinator (TBD) ‚Ä¢ –°–µ–∫—Ä–µ—Ç–∞—Ä: (TBD)

–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –û–ø–µ—Ä–∞—Ü—ñ–π–Ω–∏–π —Ü–µ–Ω—Ç—Ä –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó DAO‚ÄëGOGS. –®–≤–∏–¥–∫–∏–π –æ–≥–ª—è–¥ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö/—Ç–µ—Ä–º—ñ–Ω–æ–≤–∏—Ö/–ø–ª–∞–Ω–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å, –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤, –∑–≤—ñ—Ç—ñ–≤ —Ç–∞ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ–π.

üö® –ö—Ä–∏—Ç–∏—á–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è (48 —Ä–æ–∫—ñ–≤)
SLA: –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—ñ–≤ –Ω–µ —Ä—ñ–¥—à–µ –Ω—ñ–∂ 12 —Ä–æ–∫—ñ–≤.


G04‚ÄëT‚Äë20250903‚ÄëC01 ‚Äî –í–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ ZIP —É —Ä–µ–ª—ñ–∑–∞—Ö DAO‚ÄëGallery ( SYMBOLS/ANIM/BRAND), –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ dist—ñ –∞–∫—Ç–∏–≤–∏ —É Release ‚Äî –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏–π: –°.–ß. ‚Äî ETA: 04.09, 18:00 ‚Äî –°—Ç–∞—Ç—É—Å: In‚ÄëProgress ‚Äî –ü—Ä–∏–º—ñ—Ç–∫–∞: –¥–∏–≤. logi 2025‚Äë09‚Äë02 (DAO‚Äë–≥–∞–ª–µ—Ä–µ—è)


G04‚ÄëT‚Äë20250903‚ÄëC02 ‚Äî –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞—Ö–∏—Å—Ç—É –≤—ñ–¥–≥–∞–ª—É–∂–µ–Ω–Ω—è –¥–ª—è Checha-hub-DAO/checha_core(–Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –ø–æ–≥–æ–¥–∂–µ–Ω–Ω—è) ‚Äî –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏–π: –°.–ß. ‚Äî ETA: 04.09, 20:00 ‚Äî –°—Ç–∞—Ç—É—Å: In‚ÄëProgress ‚Äî –ü—Ä–∏–º—ñ—Ç–∫–∞: –¥–∏–≤. 0902T08 CI/CD


G04‚ÄëT‚Äë20250903‚ÄëC03 ‚Äî –í–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —É tools/check_release.ps1(—É–∑–≥–æ–¥–∏—Ç–∏ –Ω–∞–∑–≤–∏/–ø–∞—Ä–∞–º–µ—Ç—Ä–∏; —Ç–µ—Å—Ç —ñ–∑ ethno-v1.2) ‚Äî –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏–π: –°.–ß. ‚Äî ETA: 05.09, 12:00 ‚Äî –°—Ç–∞—Ç—É—Å: –í –æ—á—ñ–∫—É–≤–∞–Ω–Ω—ñ ‚Äî –ü—Ä–∏–º—ñ—Ç–∫–∞: –ø–æ–º–∏–ª–∫–∞-ZipName

üìå –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è (—Å–∫–æ—Ä–∏–≥—É–π—Ç–µ –ø—ñ–¥ —Ñ–∞–∫—Ç–∏—á–Ω–∏–π —Å—Ç–∞–Ω)
–†–µ–ª—ñ–∑–∏ DAO‚ÄëGallery: –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ ZIP–∏ —É SYMBOLS/ANIM/BRAND(–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ dist —Ç–∞ —Ä–µ–ª—ñ–∑‚Äëassets).

–ó–∞—Ö–∏—Å—Ç –≥–∞–ª—É–∑—ñ: –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∏–º–æ–≥–∏ –¥–æ –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫ —É checha_core(—É–∑–≥–æ–¥–∏—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ + –º—ñ–Ω. –ø–æ–≥–æ–¥–∂–µ–Ω–Ω—è).

–°–∫—Ä–∏–ø—Ç —Ä–µ–ª—ñ–∑‚Äë–ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —É check_release.ps1(—É–∑–≥–æ–¥–∂–µ–Ω–Ω—è –Ω–∞–∑–≤/–ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤).

‚ö†Ô∏è –¢–µ—Ä–º—ñ–Ω–æ–≤—ñ –∑–∞–≤–¥–∞–Ω–Ω—è (7 –¥–Ω—ñ–≤)
SLA: –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—ñ–≤ —â–æ–¥–µ–Ω–Ω–æ.


G04‚ÄëT‚Äë20250903‚ÄëU01 ‚Äî –û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –ø—É–±–ª—ñ—á–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É G04 ‚Äî DAO‚Äë–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—è–≤ GitBook (README, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –∑–≤‚Äô—è–∑–∫–∏) ‚Äî –¥–µ–¥–ª–∞–π–Ω: 2025-09-09 ‚Äî –°—Ç–∞—Ç—É—Å: –ø–ª–∞–Ω—É—î—Ç—å—Å—è


G04‚ÄëT‚Äë20250903‚ÄëU02 ‚Äî –ü—Ä–∏–≤‚Äô—è–∑–∞—Ç–∏ –ø–∞–Ω–µ–ª—å –¥–æ DAO‚Äë–ñ—É—Ä–Ω–∞–ª—É (—è–∫—ñ —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏/—Ä—ñ—à–µ–Ω–Ω—è, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∏) ‚Äî –¥–µ–¥–ª–∞–π–Ω: 2025‚Äë09‚Äë10 ‚Äî –°—Ç–∞—Ç—É—Å: –ü–ª–∞–Ω—É—î—Ç—å—Å—è


G04‚ÄëT‚Äë20250903‚ÄëU03 ‚Äî –£—Å—É–Ω—É—Ç–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è —à–ª—è—Ö—ñ–≤ –≤ —ñ–Ω–¥–µ–∫—Å—ñ C12/–ü—Ä–æ—Ç–æ–∫–æ–ª–∏ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ MinIO ‚Äî –¥–µ–¥–ª–∞–π–Ω: 2025‚Äë09‚Äë08 ‚Äî –°—Ç–∞—Ç—É—Å: –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ

üü¢ –ü–ª–∞–Ω–æ–≤—ñ –∑–∞–≤–¥–∞–Ω–Ω—è (30 –¥–Ω—ñ–≤)
SLA: —â–æ—Ç–∏–∂–Ω–µ–≤–∏–π –∞–ø–¥–µ–π—Ç, –ø–µ—Ä–µ–≤—ñ–¥ —É ¬´–¢–µ—Ä–º—ñ–Ω–æ–≤—ñ¬ª –∑–∞ 7 –¥–Ω—ñ–≤ –¥–æ –¥–µ–¥–ª–∞–π–Ω—É.


G04‚ÄëT‚Äë20250903‚ÄëP01 ‚Äî –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ G06 (–∞–≤—Ç–æ–∑–±—ñ—Ä –∑–∞–≤–¥–∞–Ω—å/–∑–≤–µ–¥–µ–Ω–Ω—è —ñ–∑ –∞–≥–µ–Ω—Ç—ñ–≤) ‚Äî –°—Ç–∞—Ç—É—Å: –ü–ª–∞–Ω—É—î—Ç—å—Å—è


G04‚ÄëT‚Äë20250903‚ÄëP02 ‚Äî –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ G11 (—Ä–æ–ª—å–æ–≤—ñ –ø–æ–≤–Ω–æ–≤–∞–∂–µ–Ω–Ω—è, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å, –ø–∞–Ω–µ–ª—ñ –ª—ñ–¥–µ—Ä—ñ–≤) ‚Äî –°—Ç–∞—Ç—É—Å: –ø–ª–∞–Ω—É—î—Ç—å—Å—è


G04‚ÄëT‚Äë20250903‚ÄëP03 ‚Äî –°—Ç–∞–±—ñ–ª—ñ–∑—É–≤–∞—Ç–∏ RHYTHM_DASHBOARD—Ç–∞ –¥–æ–¥–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –æ–ø–æ–≤—ñ—â–µ–Ω–Ω—è (–∑–¥–æ—Ä–æ–≤‚Äô—è) ‚Äî –°—Ç–∞—Ç—É—Å: –ø–ª–∞–Ω—É—î—Ç—å—Å—è

üìë –ê–∫—Ç–∏–≤–Ω—ñ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏
üîó –ü—Ä–æ—Ç–æ–∫–æ–ª –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó 01 ‚ÄîC12/Protocols/Coordination_01.md

üîó –ü—Ä–æ—Ç–æ–∫–æ–ª –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó 02 ‚ÄîC12/Protocols/Coordination_02.md

–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: —É—Å—ñ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏ –º–∞—é—Ç—å –≤–µ—Ä—Å—ñ—é, –≤–ª–∞—Å–Ω–∏–∫–∞, –∂—É—Ä–Ω–∞–ª –∑–º—ñ–Ω —Ç–∞ –ø—Ä–∏–≤'—è–∑–∫—É –¥–æ G‚Äë–º–æ–¥—É–ª—ñ–≤.

üìä –û—Å—Ç–∞–Ω–Ω—ñ –∑–≤—ñ—Ç–∏
üìÖ –©–æ—Ç–∏–∂–Ω–µ–≤–∏–π –∑–≤—ñ—Ç ‚ÄîReports.md#week-2025-W36

üìÖ –©–æ–º—ñ—Å—è—á–Ω–∏–π –∑–≤—ñ—Ç ‚ÄîReports.md#month-2025-09

üìÇ DAO‚Äë–ñ—É—Ä–Ω–∞–ª
üîó –ü–µ—Ä–µ–π—Ç–∏ –¥–æ DAO‚ÄëJOURNAL(—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏/—Ä—ñ—à–µ–Ω—å, —Å—Ç–∞—Ç—É—Å–∏, –≤–∏–∫–æ–Ω–∞–≤—Ü—ñ, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∏).

üìë –®–≤–∏–¥–∫—ñ —à–∞–±–ª–æ–Ω–∏ (BTD 1.0)
üìòtemplates/TEMPLATE_DAO-GXX.md

üìòtemplates/README_TEMPLATE.md

üìòtemplates/STRUCTURE_TEMPLATE.md

üìòtemplates/INSTRUCTIONS_TEMPLATE.md

üîó –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó G04
ü§ñ G06 ‚Äî –ê–≥–µ–Ω—Ç–Ω–∞ –º–æ–¥–µ–ª—å: –∞–≤—Ç–æ–∑–±—ñ—Ä –∑–∞–≤–¥–∞–Ω—å/–∑–≤–µ–¥–µ–Ω–Ω—è, —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ GPT‚Äë–∞–≥–µ–Ω—Ç–∞–º–∏.

üì∞ G09 ‚Äî –ú–µ–¥—ñ–∞‚Äë–ê–ª—å—è–Ω—Å: –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –π —É–∑–≥–æ–¥–∂–µ–Ω–Ω—è –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ–π.

üß≠ G11 ‚Äî –õ—ñ–¥–µ—Ä—Å—Ç–≤–æ: —É–∑–≥–æ–¥–∂–µ–Ω–Ω—è —Ä–æ–ª–µ–π, –º–∞–Ω–¥–∞—Ç—ñ–≤, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ.

üì° –†–∏—Ç–º–∏ —Ç–∞ SLA
–©–æ–¥–Ω—è: –∫–æ—Ä–æ—Ç–∫–∏–π –∞–ø–¥–µ–π—Ç –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö/—Ç–µ—Ä–º—ñ–Ω–æ–≤–∏—Ö (—Ä–∞–Ω–æ–∫/–≤–µ—á—ñ—Ä).

–©–æ—Ç–∏–∂–Ω—è (–ù–¥): –∫–æ–Ω—Å–æ–ª—ñ–¥–æ–≤–∞–Ω–∏–π G04‚Äë–∑–≤—ñ—Ç (–≤—Ö–æ–¥–∏—Ç–∏ –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π –¥–∞–π–¥–∂–µ—Å—Ç).

–ü–æ–º—ñ—Å—è—á–Ω–æ (1 —á–∏—Å–ª–æ): —Ä–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤–∞ + –ø–ª–∞–Ω –Ω–∞ –º—ñ—Å—è—Ü—å.

üóÇÔ∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª—ñ–≤ (—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è)

–ö–æ–ø—ñ—é–≤–∞—Ç–∏
C06_FOCUS/                     # –†–æ–±–æ—á—ñ –ø–∞–Ω–µ–ª—ñ —Ç–∞ —Ñ–æ–∫—É—Å–∏
  G04_PANEL.md                # –¶–µ–π —Ñ–∞–π–ª (–¥–∂–µ—Ä–µ–ª–æ –ø—Ä–∞–≤–¥–∏ –ø–æ G04)
  _data/g04_tasks.json        # –ú–∞—à–∏–Ω–æ—á–∏—Ç–Ω–∏–π —Ä–µ—î—Å—Ç—Ä –∑–∞–≤–¥–∞–Ω—å
  _data/g04_protocols.json    # –Ü–Ω–¥–µ–∫—Å –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤
C11_AUTOMATION/
  G04/Update-G04-Panel.ps1    # –†–µ–Ω–¥–µ—Ä/—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ø–∞–Ω–µ–ª—ñ –∑ _data —Ç–∞ –∂—É—Ä–Ω–∞–ª–∞–º–∏
C03/LOG/
  G04_PANEL_HISTORY.md        # –Ü—Å—Ç–æ—Ä—ñ—è –∑–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ —Ç–∞ –∫–ª—é—á–æ–≤—ñ –ø–æ–¥—ñ—ó
DAO-G/G04/
  README.md                   # –ü—É–±–ª—ñ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –º–æ–¥—É–ª—è (GitBook/Journey)
üß© –§–æ—Ä–º–∞—Ç–∏ –¥–∞–Ω–∏—Ö (–º–∞—à–∏–Ω–æ—á–∏—Ç–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏)
_data/g04_tasks.json


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
{
  "critical_48h": [
    {"id": "G04-T-20250903-C01", "title": "‚Ä¶", "owner": "‚Ä¶", "eta": "2025-09-04T18:00:00+03:00", "status": "Pending", "notes": "‚Ä¶"}
  ],
  "urgent_7d": [
    {"id": "G04-T-20250903-U01", "title": "‚Ä¶", "deadline": "2025-09-09", "status": "Pending"}
  ],
  "planned_30d": [
    {"id": "G04-T-20250903-P01", "title": "‚Ä¶", "status": "Planned"}
  ]
}
_data/g04_protocols.json


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
{
  "items": [
    {"id": "CP-01", "title": "Coordination Protocol 01", "path": "C12/Protocols/Coordination_01.md", "version": "v1.0"},
    {"id": "CP-02", "title": "Coordination Protocol 02", "path": "C12/Protocols/Coordination_02.md", "version": "v1.0"}
  ]
}
‚öôÔ∏è –°–∫—Ä–∏–ø—Ç —Ä–µ–Ω–¥–µ—Ä—É –ø–∞–Ω–µ–ª—ñ (–ø–æ–≤–Ω–∞ –≤–µ—Ä—Å—ñ—è)
–ë–µ—Ä–µ _data/*.json, –¥–æ–¥–∞—î –∞–≤—Ç–æ—è–∫–æ—Ä—ñ –∑–≤—ñ—Ç—ñ–≤ (—Ç–∏–∂–¥–µ–Ω—å/–º—ñ—Å—è—Ü—å), –≤–∏—Ç—è–≥—É—î –¥–∞–π–¥–∂–µ—Å—Ç —ñ–∑ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –ª–æ–≥—ñ–≤, –∑–±–∏—Ä–∞—î Markdown —ñ –≤–µ–¥–µ —ñ—Å—Ç–æ—Ä—ñ—é –æ–Ω–æ–≤–ª–µ–Ω—å.


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
[CmdletBinding()]
param(
  [string]$Root = "C:\CHECHA_CORE",
  [string]$PanelMd = $(Join-Path "C:\CHECHA_CORE" "C06_FOCUS\G04_PANEL.md"),
  [string]$DataDir = $(Join-Path "C:\CHECHA_CORE" "C06_FOCUS\_data"),
  [string]$LogDir  = $(Join-Path "C:\CHECHA_CORE" "C03\LOG"),
  [string]$HistoryMd = $(Join-Path "C:\CHECHA_CORE" "C03\LOG\G04_PANEL_HISTORY.md"),
  [string]$JournalPath = $(Join-Path "C:\CHECHA_CORE" "DAO-JOURNAL\README.md"),
  [switch]$DryRun
)

function Ensure-Dir([string]$p){ if(-not (Test-Path $p)){ New-Item -ItemType Directory -Force -Path $p | Out-Null } }
function Read-Json([string]$p){ if(Test-Path $p){ try{ Get-Content $p -Raw -Encoding UTF8 | ConvertFrom-Json } catch{ Write-Warning "JSON parse error: $p ‚Äî $_"; $null } } else { $null } }
function NowKyiv(){ (Get-Date).ToString('yyyy-MM-dd HH:mm:ss') }
function IsoWeekInfo(){
  $now = Get-Date
  $w = [System.Globalization.ISOWeek]::GetWeekOfYear($now)
  $wk = [string]::Format('{0:D2}',$w)
  @{ Year=$now.Year; Week=$wk; Month=$now.ToString('yyyy-MM') }
}

# Paths
Ensure-Dir (Split-Path $PanelMd -Parent)
Ensure-Dir $DataDir
Ensure-Dir (Split-Path $HistoryMd -Parent)

# Load data
$tasksPath = Join-Path $DataDir 'g04_tasks.json'
$protoPath = Join-Path $DataDir 'g04_protocols.json'
$T = Read-Json $tasksPath
$P = Read-Json $protoPath
if(-not $T){ $T = @{ critical_48h=@(); urgent_7d=@(); planned_30d=@() } }
if(-not $P){ $P = @{ items=@() } }

# Compute anchors (reports)
$wi = IsoWeekInfo
$weeklyAnchor  = "Reports.md#week-$($wi.Year)-W$($wi.Week)"
$monthlyAnchor = "Reports.md#month-$($wi.Month)"

# Logs digest (last 3 logs, 200 lines; error/warn counters)
$logFiles = Get-ChildItem -Path $LogDir -Filter '*.log' -File -ErrorAction SilentlyContinue | Sort-Object LastWriteTime -Descending | Select-Object -First 3
$errCount=0;$warnCount=0;$lastErrLine=$null
foreach($lf in $logFiles){
  $lines = Get-Content $lf -Tail 200 -ErrorAction SilentlyContinue
  foreach($ln in $lines){
    if($ln -match '(?i)(ERROR|ERR|FAILED|EXCEPTION)'){ $errCount++; $lastErrLine=$ln }
    if($ln -match '(?i)(WARNING|WARN)'){ $warnCount++ }
  }
}

# Markdown build helpers
function Section-Tasks($title,$arr,$fmt){
  $s = @()
  $s += "## $title"
  if($null -eq $arr -or $arr.Count -eq 0){ $s += "- (–ø–æ—Ä–æ–∂–Ω—å–æ)"; return ($s -join "`n") }
  foreach($t in $arr){
    $id=$t.id; $title=$t.title; $owner=$t.owner; $eta=$t.eta; $status=$t.status; $deadline=$t.deadline
    switch($fmt){
      'critical' { $s += "- [ ] **$id** ‚Äî $title ‚Äî **–≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏–π:** $owner ‚Äî **ETA:** $eta ‚Äî **–°—Ç–∞—Ç—É—Å:** $status" }
      'urgent'   { $s += "- [ ] **$id** ‚Äî $title ‚Äî **–¥–µ–¥–ª–∞–π–Ω:** $deadline ‚Äî **–°—Ç–∞—Ç—É—Å:** $status" }
      'planned'  { $s += "- [ ] **$id** ‚Äî $title ‚Äî **–°—Ç–∞—Ç—É—Å:** $status" }
    }
  }
  return ($s -join "`n")
}

function Section-Protocols($items){
  $s=@(); $s+="## üìë –ê–∫—Ç–∏–≤–Ω—ñ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏"
  if($null -eq $items -or $items.Count -eq 0){ $s += "- (–ø–æ—Ä–æ–∂–Ω—å–æ)"; return ($s -join "`n") }
  foreach($p in $items){ $s += "- üîó **$($p.title)** ‚Äî `$($p.path)` (v$($p.version))" }
  ($s -join "`n")
}

# Header
$now = NowKyiv
$md = @()
$md += "# G04 ‚Äî –†–æ–±–æ—á–∞ –ü–∞–Ω–µ–ª—å (MVP v1.0)"
$md += "**–°—Ç–∞—Ç—É—Å:** ACTIVE ‚Ä¢ **–û–Ω–æ–≤–ª–µ–Ω–æ:** $now (Kyiv)"
$md += "
---
"

# Tasks sections
$md += (Section-Tasks 'üö® –ö—Ä–∏—Ç–∏—á–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è (48 –≥–æ–¥)' $T.critical_48h 'critical')
$md += "
---
"
$md += (Section-Tasks '‚ö†Ô∏è –¢–µ—Ä–º—ñ–Ω–æ–≤—ñ –∑–∞–≤–¥–∞–Ω–Ω—è (7 –¥–Ω—ñ–≤)' $T.urgent_7d 'urgent')
$md += "
---
"
$md += (Section-Tasks 'üü¢ –ü–ª–∞–Ω–æ–≤—ñ –∑–∞–≤–¥–∞–Ω–Ω—è (30 –¥–Ω—ñ–≤)' $T.planned_30d 'planned')
$md += "
---
"

# Protocols
$md += (Section-Protocols $P.items)
$md += "
---
"

# Reports anchors
$md += "## üìä –û—Å—Ç–∞–Ω–Ω—ñ –∑–≤—ñ—Ç–∏"
$md += "- üìÖ **–©–æ—Ç–∏–∂–Ω–µ–≤–∏–π –∑–≤—ñ—Ç** ‚Äî `$weeklyAnchor`"
$md += "- üìÖ **–©–æ–º—ñ—Å—è—á–Ω–∏–π –∑–≤—ñ—Ç** ‚Äî `$monthlyAnchor`"
$md += "
---
"

# Journal link
$journalLink = if(Test-Path $JournalPath){ $JournalPath } else { 'DAO‚ÄëJOURNAL (README.md)' }
$md += "## üìÇ DAO‚Äë–ñ—É—Ä–Ω–∞–ª"
$md += "- üîó –ü–µ—Ä–µ–π—Ç–∏ –¥–æ: `$journalLink`"
$md += "
---
"

# Templates & Integrations (static refs kept)
$md += "## üìë –®–≤–∏–¥–∫—ñ —à–∞–±–ª–æ–Ω–∏ (BTD 1.0)"
$md += "- üìò `templates/TEMPLATE_DAO-GXX.md`"
$md += "- üìò `templates/README_TEMPLATE.md`"
$md += "- üìò `templates/STRUCTURE_TEMPLATE.md`"
$md += "- üìò `templates/INSTRUCTIONS_TEMPLATE.md`"
$md += "
---
"
$md += "## üîó –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó G04"
$md += "- ü§ñ **G06 ‚Äî –ê–≥–µ–Ω—Ç–Ω–∞ –º–æ–¥–µ–ª—å:** –∞–≤—Ç–æ–∑–±—ñ—Ä –∑–∞–≤–¥–∞–Ω—å/–∑–≤–µ–¥–µ–Ω—å, —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ GPT‚Äë–∞–≥–µ–Ω—Ç–∞–º–∏."
$md += "- üì∞ **G09 ‚Äî –ú–µ–¥—ñ–∞‚Äë–ê–ª—å—è–Ω—Å:** –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –π —É–∑–≥–æ–¥–∂–µ–Ω–Ω—è –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ–π."
$md += "- üß≠ **G11 ‚Äî –õ—ñ–¥–µ—Ä—Å—Ç–≤–æ:** —É–∑–≥–æ–¥–∂–µ–Ω–Ω—è —Ä–æ–ª–µ–π, –º–∞–Ω–¥–∞—Ç—ñ–≤, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ."
$md += "
---
"

# Logs digest section
$md += "## üß™ –õ–æ–≥–∏ (–æ—Å—Ç–∞–Ω–Ω—ñ 3 —Ñ–∞–π–ª–∏, –¥–∞–π–¥–∂–µ—Å—Ç)"
$md += "- –ó–Ω–∞–π–¥–µ–Ω–æ: $($logFiles.Count) —Ñ–∞–π–ª—ñ–≤; **ERR:** $errCount ‚Ä¢ **WARN:** $warnCount"
if($lastErrLine){ $md += ("- –û—Å—Ç–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∞: " + ($lastErrLine -replace '\|`','').Trim()) }

# Output
$final = ($md -join "`n") + "`n"
if($DryRun){
  Write-Host "[DryRun] Would write panel to: $PanelMd" -ForegroundColor Yellow
} else {
  $final | Set-Content -Encoding UTF8 $PanelMd
  Write-Host "‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –ø–∞–Ω–µ–ª—å: $PanelMd"
}

# History entry
$h = @()
$h += "[${now}] Update: critical=$($T.critical_48h.Count); urgent=$($T.urgent_7d.Count); planned=$($T.planned_30d.Count); ERR=$errCount; WARN=$warnCount"
Add-Content -Encoding UTF8 -Path $HistoryMd -Value ($h -join "`n")
Write-Host "üìù –î–æ–¥–∞–Ω–æ –∑–∞–ø–∏—Å —É —ñ—Å—Ç–æ—Ä—ñ—é: $HistoryMd"
üöÄ –ê–∫—Ç–∏–≤–∞—Ü—ñ—è (15 —Ö–≤)
–°—Ç–≤–æ—Ä–∏—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫/—Ñ–∞–π–ª—ñ–≤ (–¥–∏–≤. –≤–∏—â–µ).

–°–∫–æ–ø—ñ—é–π—Ç–µ —Ü–µ–π —Ñ–∞–π–ª —É C06_FOCUS/G04_PANEL.md—Ç–∞ –∑–∞–∫–æ–º—ñ—Ç—ñ—Ç—å —É checha_core.

–ó–∞–ø–æ–≤–Ω–∏—Ç–∏ _data ( g04_tasks.json, g04_protocols.json) –ø–µ—Ä—à–∏–º–∏ –∑–∞–ø–∏—Å–∞–º–∏.

–ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–∫—Ä–∏–ø—Ç C11_AUTOMATION/G04/Update-G04-Panel.ps1 –≤—Ä—É—á–Ω—É.

(–û–ø—Ü.) –†–æ–∑–∫–ª–∞–¥ –∑–∞–≤–¥–∞–Ω–Ω—è Windows Scheduler:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
schtasks /Create /TN "G04_UpdatePanel" /SC HOURLY /MO 4 ^
 /TR "pwsh -NoProfile -ExecutionPolicy Bypass -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Update-G04-Panel.ps1" ^
 /ST 08:00 /RU SYSTEM
üè∑Ô∏è –ü—Ä–∞–≤–∏–ª–∞ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –∑–∞–≤–¥–∞–Ω—å
G04-T-<YYYYMMDD>-<C|U|P><NN>

C‚Äî –ö—Ä–∏—Ç–∏—á–Ω–æ 48 –≥–æ–¥, U‚Äî –¢–µ—Ä–º—ñ–Ω–æ–≤–æ 7 –¥–Ω, P‚Äî –ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ 30 –¥–Ω.

–ü—Ä–∏ –∑–º—ñ–Ω—ñ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É: –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ –º—ñ–∂ —Ä–æ–∑–¥—ñ–ª–∞–º–∏, ID –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è .

üß≠ –†–æ–ª—ñ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å
G04‚ÄëCoordinator: –∑–∞—Ç–≤–µ—Ä–¥–∂—É—î –ø–µ—Ä–µ–≤–∞–≥–∏, –≤–µ–¥–µ —Ä–∏—Ç–º–∏, –ø–æ–¥–∞–ª—å—à—É –µ—Å–∫–∞–ª–∞—Ü—ñ—é.

–°–µ–∫—Ä–µ—Ç–∞—Ä: –ø—ñ–¥—Ç—Ä–∏–º—É—î –∞–∫—Ç—É–∞–ª—å–Ω—ñ—Å—Ç—å –ø–∞–Ω–µ–ª—ñ/–∂—É—Ä–Ω–∞–ª—É, –∫–æ–Ω—Ç—Ä–æ–ª—é—î SLA –æ–Ω–æ–≤–ª–µ–Ω—å.

–ê–Ω–∞–ª—ñ—Ç–∏–∫: –∑–≤–æ–¥–∏—Ç—å –º–µ—Ç—Ä–∏–∫—É, –≥–æ—Ç—É—î —Ç–∏–∂–Ω–µ–≤—ñ/–º—ñ—Å—è—á–Ω—ñ –∑—Ä—ñ–∑–∏, –≤–∏—è–≤–ª—è—î —Ä–∏–∑–∏–∫–∏.

–ß–µ—Ä–≥–æ–≤–∏–π: —á–µ—Ä–≥–æ–≤–∏–π –Ω–∞ –∫—Ä–∏—Ç–∏—á–Ω—ñ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è —É –≤—ñ–∫–Ω—ñ 48 –≥–æ–¥.

üì¶ ZIP-–ø–∞–∫–µ—ÇG04_AUTOMATION_v1.1
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –∑—ñ–±—Ä–∞—Ç–∏ –≤—Å—ñ —Å–∫—Ä–∏–ø—Ç–∏/—à–∞–±–ª–æ–Ω–∏ G04 –≤ –æ–¥–∏–Ω –∞—Ä—Ö—ñ–≤ –¥–ª—è —ñ–Ω—Å—Ç–∞–ª—è—Ü—ñ—ó –≤ —ñ–Ω—à–∏–π –≤—É–∑–æ–ª –∞–±–æ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó –≤ Release.

–í–º—ñ—Å—Ç –ø–∞–∫–µ—Ç–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏–π)

–ö–æ–ø—ñ—é–≤–∞—Ç–∏
C11_AUTOMATION/ G04/
  Update-G04-Panel.ps1
  Generate-G04-Tasks.ps1
  Invoke-G04-Health.ps1
  Handle-G04-Escalation.ps1
  Notify-G04.ps1
  Build-G04-Stats.ps1
  Pack-G04-Automation.ps1           # (—Ü–µ–π –∑–±–∏—Ä–∞—á)
C06_FOCUS/
  G04_PANEL.md                       # —Å—Ç–∞—Ä—Ç–æ–≤–∞ –ø–∞–Ω–µ–ª—å (–º–æ–∂–Ω–∞ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç–∏ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ)
  _data/
    g04_tasks.json                   # —á–µ—Ä–Ω–µ—Ç–∫–∞
    g04_protocols.json               # —á–µ—Ä–Ω–µ—Ç–∫–∞
    g04_notify.json                  # –ø—Ä–∏–∫–ª–∞–¥ –∫–æ–Ω—Ñ—ñ–≥—ñ–≤ –Ω–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π
README_G04_AUTOMATION.md             # —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è/—Ä–∏—Ç–º—ñ–≤
RELEASE_NOTES.md                     # –Ω–æ—Ç–∞—Ç–∫–∏ —Ä–µ–ª—ñ–∑—É
MANIFEST.json                        # —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤, —Ä–æ–∑–º—ñ—Ä–∏, sha256
CHECKSUMS.txt                        # sha256 —É—Å—ñ—Ö —Ñ–∞–π–ª—ñ–≤ –ø–∞–∫–µ—Ç–∞
g04_stats.json–≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –ø—ñ–¥ —á–∞—Å —Ä–æ–±–æ—Ç–∏ —ñ –¥–æ –ø–∞–∫–µ—Ç–∞ –Ω–µ –≤—Ö–æ–¥–∏—Ç—å.

README_G04_AUTOMATION.md (–≤–º—ñ—Å—Ç)

–ö–æ–ø—ñ—é–≤–∞—Ç–∏
# G04 Automation v1.1
## –ú–µ—Ç–∞
–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è —Ä–æ–±–æ—á–æ—ó –ø–∞–Ω–µ–ª—ñ G04: –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–∞–¥–∞—á, —Ä–µ–Ω–¥–µ—Ä –ø–∞–Ω–µ–ª—ñ, health‚Äëcheck, –µ—Å–∫–∞–ª–∞—Ü—ñ—è, –Ω–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.

## –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è (Windows, PowerShell 7+)
1) –†–æ–∑–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö—ñ–≤ —É –∫–æ—Ä—ñ–Ω—å `C:/CHECHA_CORE` (–∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º –∑–∞–º—ñ–Ω–∏ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏).
2) –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É: `C11_AUTOMATION/G04/*.ps1`, `C06_FOCUS/G04_PANEL.md`, `_data/*.json`.
3) –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–π—Ç–µ —Å–µ–∫—Ä–µ—Ç–∏ (Telegram/Email) –∞–±–æ –≤—ñ–¥—Ä–µ–¥–∞–≥—É–π—Ç–µ `_data/g04_notify.json`.
4) –†—É—á–Ω–∏–π –∑–∞–ø—É—Å–∫ —É —Ç–∞–∫–æ–º—É –ø–æ—Ä—è–¥–∫—É:
   - `Generate-G04-Tasks.ps1` ‚Üí `Update-G04-Panel.ps1` ‚Üí `Invoke-G04-Health.ps1`.
5) –ù–∞–ª–∞—à—Ç—É–π—Ç–µ —Ä–æ–∑–∫–ª–∞–¥ (`schtasks`):
   - 08:15 ‚Äî Generate
   - 08:18 ‚Äî Build‚ÄëStats
   - 08:20 ‚Äî Update‚ÄëPanel
   - 08:25 ‚Äî Health‚ÄëEscalate

## –û–Ω–æ–≤–ª–µ–Ω–Ω—è
- –ó–∞–º—ñ–Ω—é–π—Ç–µ –ª–∏—à–µ `C11_AUTOMATION/G04/*.ps1` —Ç–∞ —à–∞–±–ª–æ–Ω–∏ –≤ `_data` (—Ä—É—á–Ω—ñ –ø—Ä–∞–≤–∫–∏ –∑–±–µ—Ä–µ–∂—ñ—Ç—å). 

## –ë–µ–∑–ø–µ–∫–∞
- –°–µ–∫—Ä–µ—Ç–∏ —á–µ—Ä–µ–∑ env: `G04_TG_BOT`, `G04_TG_CHAT`, `G04_SMTP_USER`, `G04_SMTP_PASS`.
- –õ–æ–≥–∏: `C03/LOG/G04_*` (–æ—á–∏—â–µ–Ω–Ω—è –∑–∞ –≤–∞—à–∏–º–∏ –ø–æ–ª—ñ—Ç–∏–∫–∞–º–∏).
RELEASE_NOTES.md (—à–∞–±–ª–æ–Ω)

–ö–æ–ø—ñ—é–≤–∞—Ç–∏
# G04 Automation v1.1 ‚Äî 2025‚Äë09‚Äë03
- –î–æ–¥–∞–Ω–æ –ø–æ–≤–Ω–∏–π —Ä–µ–Ω–¥–µ—Ä –ø–∞–Ω–µ–ª—ñ –∑ –¥–∞–π–¥–∂–µ—Å—Ç–æ–º –ª–æ–≥—ñ–≤.
- –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–¥–∞—á —ñ–∑ git/–ª–æ–≥—ñ–≤.
- Health‚Äëcheck + Escalation (cooldown, –ª–æ–≥—É–≤–∞–Ω–Ω—è, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –∑–∞–¥–∞—á).
- –ù–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó (Telegram/Email) + —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –µ—Å–∫–∞–ª–∞—Ü—ñ–π.
- –ü–∞–∫—É–≤–∞–ª—å–Ω–∏–∫ –∑ MANIFEST —ñ CHECKSUMS.
Pack-G04-Automation.ps1‚Äî –∑–±—ñ—Ä–∫–∞ ZIP + –ú–ê–ù–Ü–§–ï–°–¢ + –ö–û–ù–¢–†–û–õ–¨–ù–Ü –°–£–ú–ò

–ö–æ–ø—ñ—é–≤–∞—Ç–∏
[CmdletBinding()]
param(
  [string]$Root = 'C:/CHECHA_CORE',
  [string]$Version = 'v1.1',
  [string]$OutDir = $(Join-Path $PWD 'dist'),
  [switch]$OpenFolder
)

function Ensure-Dir($p){ if(-not (Test-Path $p)){ New-Item -ItemType Directory -Force -Path $p | Out-Null } }
function Sha256($p){ (Get-FileHash -Algorithm SHA256 -Path $p).Hash.ToLower() }

$stamp = (Get-Date).ToString('yyyyMMdd_HHmmss')
$zipName = "G04_AUTOMATION_${Version}_${stamp}.zip"
$stage = Join-Path $env:TEMP ("g04_stage_"+$stamp)
Ensure-Dir $stage
Ensure-Dir $OutDir

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤ (–≤—ñ–¥–Ω–æ—Å–Ω–æ $Root)
$files = @(
  'C11/C11_AUTOMATION/G04/Update-G04-Panel.ps1',
  'C11/C11_AUTOMATION/G04/Generate-G04-Tasks.ps1',
  'C11/C11_AUTOMATION/G04/Invoke-G04-Health.ps1',
  'C11/C11_AUTOMATION/G04/Handle-G04-Escalation.ps1',
  'C11/C11_AUTOMATION/G04/Notify-G04.ps1',
  'C11/C11_AUTOMATION/G04/Build-G04-Stats.ps1',
  'C11/C11_AUTOMATION/G04/Pack-G04-Automation.ps1',
  'C06_FOCUS/G04_PANEL.md',
  'C06_FOCUS/_data/g04_tasks.json',
  'C06_FOCUS/_data/g04_protocols.json',
  'C06_FOCUS/_data/g04_notify.json',
  'README_G04_AUTOMATION.md',
  'RELEASE_NOTES.md'
)

# –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è —É stage
foreach($rel in $files){
  $src = Join-Path $Root $rel
  if(-not (Test-Path $src)) { Write-Warning "Skip missing: $rel"; continue }
  $dst = Join-Path $stage $rel
  Ensure-Dir (Split-Path $dst -Parent)
  Copy-Item $src $dst -Force
}

# MANIFEST.json
$manifest = @()
Get-ChildItem -Path $stage -Recurse -File | ForEach-Object {
  $rel = [IO.Path]::GetRelativePath($stage, $_.FullName).Replace([IO.Path]::DirectorySeparatorChar, '/')
  $manifest += [ordered]@{ path=$rel; size=$_.Length; sha256=Sha256 $_.FullName }
}
$manifestPath = Join-Path $stage 'MANIFEST.json'
$manifest | ConvertTo-Json -Depth 5 | Set-Content -Encoding UTF8 $manifestPath

# CHECKSUMS.txt (–¥–ª—è –∫–æ—Ä–µ–Ω—è –ø–∞–∫–µ—Ç–∞)
$checks = @()
Get-ChildItem -Path $stage -Recurse -File | ForEach-Object {
  $rel = [IO.Path]::GetRelativePath($stage, $_.FullName).Replace([IO.Path]::DirectorySeparatorChar, '/')
  $checks += ("{0} *{1}" -f (Sha256 $_.FullName), $rel)
}
$checksPath = Join-Path $stage 'CHECKSUMS.txt'
$checks -join "`n" | Set-Content -Encoding ASCII $checksPath

# ZIP
$zipPath = Join-Path $OutDir $zipName
if(Test-Path $zipPath){ Remove-Item $zipPath -Force }
Compress-Archive -Path (Join-Path $stage '*') -DestinationPath $zipPath -CompressionLevel Optimal

Write-Host "‚úÖ –ó—ñ–±—Ä–∞–Ω–æ: $zipPath"
if($OpenFolder){ ii $OutDir }
–ó–∞–ø—É—Å–∫:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
pwsh -NoProfile -ExecutionPolicy Bypass -File C:/CHECHA_CORE/C11/C11_AUTOMATION/G04/Pack-G04-Automation.ps1 -Root C:/CHECHA_CORE -Version v1.1 -OutDir C:/CHECHA_CORE/C05_ARCHIVE -OpenFolder
–ü—É–±–ª—ñ–∫–∞—Ü—ñ—è –≤ GitHub Release (–æ–ø—Ü—ñ–π–Ω–æ)
–ü–æ—Ç—Ä—ñ–±–µ–Ω ghCLI —ñ –¥–æ—Å—Ç—É–ø –¥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é Checha-hub-DAO/checha_core.


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
$repo = 'Checha-hub-DAO/checha_core'
$tag  = 'g04-automation-v1.1'
$zip  = (Get-ChildItem C:/CHECHA_CORE/C05_ARCHIVE -Filter 'G04_AUTOMATION_v1.1_*.zip' | Sort-Object LastWriteTime -Desc | Select-Object -First 1).FullName

# –°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–±–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ä–µ–ª—ñ–∑
cd C:/CHECHA_CORE
$notes = Get-Content ./RELEASE_NOTES.md -Raw

gh release create $tag $zip -R $repo -t 'G04 Automation v1.1' -n $notes
# –∞–±–æ (–æ–Ω–æ–≤–∏—Ç–∏ —ñ—Å–Ω—É—é—á–∏–π):
# gh release upload $tag $zip --clobber -R $repo
üìù –°–ø–∏—Å–æ–∫ –∑–º—ñ–Ω
2025‚Äë09‚Äë03 (v1.0): –°—Ç–∞—Ä—Ç–æ–≤–∞ –≤–µ—Ä—Å—ñ—è –ø–∞–Ω–µ–ª—ñ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ _data, —Å–∫–µ–ª–µ—Ç —Å–∫—Ä–∏–ø—Ç–∞ —Ä–µ–Ω–¥–µ—Ä—É, —Ä–∏—Ç–º–∏/SLA, —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó.

üì¶ _data ‚Äî –ß–µ—Ä–Ω–µ—Ç–∫–∞ v1.0 (–≥–æ—Ç–æ–≤—ñ JSON)
_data/g04_tasks.json


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
{
  "critical_48h": [
    {
      "id": "G04-T-20250903-C01",
      "title": "–í–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ ZIP —É —Ä–µ–ª—ñ–∑–∞—Ö DAO-Gallery (SYMBOLS/ANIM/BRAND); –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ dist —ñ Release assets",
      "owner": "–°.–ß.",
      "eta": "2025-09-04T18:00:00+03:00",
      "status": "In-Progress",
      "notes": "–î–∏–≤. –ª–æ–≥–∏ 2025-09-02 (DAO-Gallery)"
    },
    {
      "id": "G04-T-20250903-C02",
      "title": "–ó–∞–≤–µ—Ä—à–∏—Ç–∏ branch protection —É Checha-hub-DAO/checha_core (required checks, min approvals)",
      "owner": "–°.–ß.",
      "eta": "2025-09-04T20:00:00+03:00",
      "status": "In-Progress",
      "notes": "0902T08 CI/CD"
    },
    {
      "id": "G04-T-20250903-C03",
      "title": "–í–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤ tools/check_release.ps1 (—É–∑–≥–æ–¥–∏—Ç–∏ –Ω–∞–∑–≤–∏/–ø–∞—Ä–∞–º–µ—Ç—Ä–∏; —Ç–µ—Å—Ç —ñ–∑ ethno-v1.2)",
      "owner": "–°.–ß.",
      "eta": "2025-09-05T12:00:00+03:00",
      "status": "Pending",
      "notes": "–ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ -ZipName"
    }
  ],
  "urgent_7d": [
    {
      "id": "G04-T-20250903-U01",
      "title": "–û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ G04 —É GitBook (README, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –∑–≤‚Äô—è–∑–∫–∏)",
      "deadline": "2025-09-09",
      "status": "Planned"
    },
    {
      "id": "G04-T-20250903-U02",
      "title": "–ü—Ä–∏–≤‚Äô—è–∑–∞—Ç–∏ –ø–∞–Ω–µ–ª—å –¥–æ DAO-–ñ—É—Ä–Ω–∞–ª—É (—è–∫–æ—Ä—ñ —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤/—Ä—ñ—à–µ–Ω—å)",
      "deadline": "2025-09-10",
      "status": "Planned"
    },
    {
      "id": "G04-T-20250903-U03",
      "title": "–£—Å—É–Ω—É—Ç–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è —à–ª—è—Ö—ñ–≤ —É C12/Protocols –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ MinIO",
      "deadline": "2025-09-08",
      "status": "Planned"
    }
  ],
  "planned_30d": [
    {
      "id": "G04-T-20250903-P01",
      "title": "–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ G06 (–∞–≤—Ç–æ–∑–±—ñ—Ä –∑–∞–¥–∞—á/–∑–≤–µ–¥–µ–Ω—å)",
      "status": "Planned"
    },
    {
      "id": "G04-T-20250903-P02",
      "title": "–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ G11 (–º–∞–Ω–¥–∞—Ç–∏/–≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å)",
      "status": "Planned"
    },
    {
      "id": "G04-T-20250903-P03",
      "title": "–°—Ç–∞–±—ñ–ª—ñ–∑—É–≤–∞—Ç–∏ RHYTHM_DASHBOARD —ñ –¥–æ–¥–∞—Ç–∏ –∞–ª–µ—Ä—Ç–∏",
      "status": "Planned"
    }
  ]
}
_data/g04_protocols.json


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
{
  "items": [
    {"id": "CP-01", "title": "Coordination Protocol 01", "path": "C12/Protocols/Coordination_01.md", "version": "v1.0"},
    {"id": "CP-02", "title": "Coordination Protocol 02", "path": "C12/Protocols/Coordination_02.md", "version": "v1.0"}
  ]
}
üîß –Ü–Ω—Å—Ç–∞–ª—è—Ü—ñ—è —Ç–∞ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ (–∫–æ–º–∞–Ω–¥–∏)
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
mkdir C:\CHECHA_CORE\C06_FOCUS\_data -Force
mkdir C:\CHECHA_CORE\C11\C11_AUTOMATION\G04 -Force
–ü–µ—Ä—à–∏–π –∑–∞–ø—É—Å–∫:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
pwsh -NoProfile -ExecutionPolicy Bypass -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Update-G04-Panel.ps1
–ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫ (—â–æ–≥–æ–¥–∏–Ω–∏, —è–∫ SYSTEM):


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
schtasks /Create /TN "G04_UpdatePanel" /SC HOURLY /MO 1 ^
 /TR "pwsh -NoProfile -ExecutionPolicy Bypass -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Update-G04-Panel.ps1" ^
 /ST 08:00 /RU SYSTEM
–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –≤—Ä—É—á–Ω—É –∑–∞—Ä–∞–∑:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
schtasks /Run /TN G04_UpdatePanel
üß∞ –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–≤–¥–∞–Ω—å ‚ÄîGenerate-G04-Tasks.ps1
–§–æ—Ä–º—É—î C06_FOCUS/_data/g04_tasks.json–∑ –∂—É—Ä–Ω–∞–ª—ñ–≤ ( C03/LOG/*.log) —ñ git-–ª–æ–≥—ñ–≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π. –ó–±–µ—Ä—ñ–≥–∞—î —ñ—Å–Ω—É—é—á—ñ —Å—Ç–∞—Ç—É—Å–∏/–≤–ª–∞—Å–Ω–∏–∫—ñ–≤ –¥–ª—è –≤–∂–µ –Ω–∞—è–≤–Ω–∏—Ö ID.


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
[CmdletBinding()]
param(
  [string]$Root = "C:\CHECHA_CORE",
  [string]$RepoPath = "C:\CHECHA_CORE",
  [int]$HoursCritical = 48,
  [int]$DaysUrgent = 7,
  [int]$DaysPlanned = 30,
  [int]$MaxPerBucket = 5,
  [switch]$DryRun
)

$DataDir = Join-Path $Root 'C06_FOCUS\_data'
$OutJson = Join-Path $DataDir 'g04_tasks.json'
$LogDir  = Join-Path $Root 'C03\LOG'
$now = Get-Date

function Ensure-Dir($p){ if(-not (Test-Path $p)){ New-Item -ItemType Directory -Force -Path $p | Out-Null } }
function Read-Json($p){ if(Test-Path $p){ try{ Get-Content $p -Raw -Encoding UTF8 | ConvertFrom-Json } catch{ $null } } else { $null } }
function Save-Json($obj,$p){ $obj | ConvertTo-Json -Depth 6 | Set-Content -Encoding UTF8 $p }

Ensure-Dir $DataDir

# 1) –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ñ—Å–Ω—É—é—á—ñ –∑–∞–¥–∞—á—ñ —â–æ–± –∑–±–µ—Ä–µ–≥—Ç–∏ —Å—Ç–∞—Ç—É—Å/owner –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ
$existing = Read-Json $OutJson
if(-not $existing){ $existing = @{ critical_48h=@(); urgent_7d=@(); planned_30d=@() } }

# 2) –ü—Ä–∞–≤–∏–ª–∞ (–º–æ–∂–Ω–∞ –≤–∏–Ω–µ—Å—Ç–∏ —É C06_FOCUS/_data/g04_rules.json)
$rules = @{
  errorKeywords = @('ERROR','FAILED','EXCEPTION','CRITICAL','FATAL','ERR')
  urgentKeywords = @('URGENT','DEADLINE','BLOCKER','HOTFIX')
  plannedKeywords = @('feat','refactor','docs','chore','release')
}

# 3) –ü–∞—Ä—Å –ª–æ–≥—ñ–≤ (–æ—Å—Ç–∞–Ω–Ω—ñ–π $HoursCritical –≥–æ–¥–∏–Ω)
$critLimit = $now.AddHours(-$HoursCritical)
$logFiles = Get-ChildItem -Path $LogDir -Filter '*.log' -File -ErrorAction SilentlyContinue | Sort-Object LastWriteTime -Descending
$critHits = @()
foreach($lf in $logFiles){
  if($lf.LastWriteTime -lt $critLimit){ break }
  $tail = Get-Content $lf -Tail 500 -ErrorAction SilentlyContinue
  foreach($ln in $tail){
    if($rules.errorKeywords | Where-Object { $ln -match $_ }){
      $critHits += [pscustomobject]@{ file=$lf.Name; when=$lf.LastWriteTime; line=$ln.Trim() }
    }
  }
}
$critHits = $critHits | Select-Object -First $MaxPerBucket

# 4) Git log (–æ—Å—Ç–∞–Ω–Ω—ñ $DaysUrgent / $DaysPlanned)
function Git(@args){
  pushd $RepoPath | Out-Null
  try{ git @args } finally { popd | Out-Null }
}
$sinceUrgent = $now.AddDays(-$DaysUrgent).ToString('yyyy-MM-dd')
$sincePlanned = $now.AddDays(-$DaysPlanned).ToString('yyyy-MM-dd')
$gitUrgent = Git log "--since=$sinceUrgent" --pretty=format:"%h|%ad|%s" --date=iso 2>$null
$gitPlanned = Git log "--since=$sincePlanned" --pretty=format:"%h|%ad|%s" --date=iso 2>$null

$urgentCommits = @()
foreach($r in $gitUrgent){ $p=$r -split '\|',3; if($p.Length -lt 3){ continue }; $urgentCommits += [pscustomobject]@{ sha=$p[0]; date=$p[1]; msg=$p[2] } }
$plannedCommits = @()
foreach($r in $gitPlanned){ $p=$r -split '\|',3; if($p.Length -lt 3){ continue }; $plannedCommits += [pscustomobject]@{ sha=$p[0]; date=$p[1]; msg=$p[2] } }

# 5) –ü–æ–±—É–¥–æ–≤–∞ –Ω–æ–≤–∏—Ö –∑–∞–¥–∞—á
function NextId($prefix,$num){ '{0}-{1:D2}' -f $prefix,$num }
$baseDate = $now.ToString('yyyyMMdd')

# Critical
$crit = @()
$idx=1
foreach($hit in $critHits){
  $id = NextId("G04-T-$baseDate-C", $idx)
  $title = "–†–æ–∑—ñ–±—Ä–∞—Ç–∏ –∫—Ä–∏—Ç–∏—á–Ω—É –ø–æ–º–∏–ª–∫—É —É $($hit.file)"
  $notes = $hit.line
  $crit += @{ id=$id; title=$title; owner='–°.–ß.'; eta=($now.AddHours(24)).ToString('s')+'+03:00'; status='Pending'; notes=$notes }
  $idx++
}

# Urgent ‚Äî –∑ git –∑–∞ 7 –¥–Ω—ñ–≤, —Ñ—ñ–ª—å—Ç—Ä –∑–∞ –∫–ª—é—á–æ–≤–∏–º–∏ —Å–ª–æ–≤–∞–º–∏
$urg = @()
$idx=1
foreach($c in $urgentCommits){
  if($rules.urgentKeywords | Where-Object { $c.msg -match $_ }){
    $id = NextId("G04-T-$baseDate-U", $idx)
    $urg += @{ id=$id; title=$c.msg; deadline=$now.AddDays(7).ToString('yyyy-MM-dd'); status='Planned' }
    $idx++
  }
}
$urg = $urg | Select-Object -First $MaxPerBucket

# Planned ‚Äî –∑ git –∑–∞ 30 –¥–Ω—ñ–≤, –∑–∞ –∫–ª—é—á–∞–º–∏ plannedKeywords
$plan = @()
$idx=1
foreach($c in $plannedCommits){
  if($rules.plannedKeywords | Where-Object { $c.msg -match $_ }){
    $id = NextId("G04-T-$baseDate-P", $idx)
    $plan += @{ id=$id; title=$c.msg; status='Planned' }
    $idx++
  }
}
$plan = $plan | Select-Object -First $MaxPerBucket

# 6) –ó–ª–∏—Ç—Ç—è –∑ —ñ—Å–Ω—É—é—á–∏–º (–∑–±–µ—Ä–µ–≥—Ç–∏ status/owner –¥–µ ID –∑–±—ñ–≥–∞—î—Ç—å—Å—è)
function Merge-Bucket($old,$neu){
  $map = @{}
  foreach($o in $old){ $map[$o.id] = $o }
  $out = @()
  foreach($n in $neu){
    if($map.ContainsKey($n.id)){
      $m = $map[$n.id]
      if($m.status){ $n.status = $m.status }
      if($m.owner){ $n.owner = $m.owner }
      if($m.deadline){ $n.deadline = $m.deadline }
      if($m.eta){ $n.eta = $m.eta }
    }
    $out += $n
  }
  return $out
}

$newObj = @{
  critical_48h = Merge-Bucket $existing.critical_48h $crit
  urgent_7d    = Merge-Bucket $existing.urgent_7d    $urg
  planned_30d  = Merge-Bucket $existing.planned_30d  $plan
}

if($DryRun){
  $newObj | ConvertTo-Json -Depth 6 | Write-Output
} else {
  Save-Json $newObj $OutJson
  Write-Host "‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ: $OutJson"
}
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
pwsh -NoProfile -ExecutionPolicy Bypass -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Generate-G04-Tasks.ps1 -RepoPath C:\CHECHA_CORE -DryRun
pwsh -NoProfile -ExecutionPolicy Bypass -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Generate-G04-Tasks.ps1 -RepoPath C:\CHECHA_CORE
–ü–æ—Ä—è–¥–æ–∫: –¥–æ–¥–∞–π —É —Ä–æ–∑–∫–ª–∞–¥ —â–æ–¥–µ–Ω–Ω–∏–π –∑–∞–ø—É—Å–∫ –æ 08:15, –∞ Update-G04-Panel.ps1‚Äî –æ 08:20.


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
schtasks /Create /TN "G04_GenerateTasks" /SC DAILY /ST 08:15 /RU SYSTEM ^
 /TR "pwsh -NoProfile -ExecutionPolicy Bypass -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Generate-G04-Tasks.ps1 -RepoPath C:\CHECHA_CORE"
ü©∫ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤'—è ‚ÄîInvoke-G04-Health.ps1
–®–≤–∏–¥–∫–∏–π –∞—É–¥–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ G04: –Ω–∞—è–≤–Ω—ñ—Å—Ç—å _data, –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å JSON, –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤, –ø–∞–Ω–µ–ª—ñ, —è–∫–æ—Ä—ñ–≤ –∑–≤—ñ—Ç—ñ–≤, –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –ª–æ–≥—ñ–≤.


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
[CmdletBinding()]
param(
  [string]$Root = "C:\CHECHA_CORE",
  [switch]$VerboseOnly
)

$DataDir = Join-Path $Root 'C06_FOCUS\_data'
$Tasks = Join-Path $DataDir 'g04_tasks.json'
$Prots = Join-Path $DataDir 'g04_protocols.json'
$Panel = Join-Path $Root 'C06_FOCUS\G04_PANEL.md'
$LogDir= Join-Path $Root 'C03\LOG'

$ok = $true
function Fail($m){ Write-Host "[FAIL] $m" -ForegroundColor Red; $script:ok=$false }
function Pass($m){ Write-Host "[OK]   $m" -ForegroundColor Green }
function Read-Json($p){ if(Test-Path $p){ try{ Get-Content $p -Raw -Encoding UTF8 | ConvertFrom-Json } catch{ Fail("JSON parse error: $p"); $null } } else { Fail("Missing: $p"); $null } }

# 1) –§–∞–π–ª–∏
if(Test-Path $DataDir){ Pass("Exists: $DataDir") } else { Fail("Missing dir: $DataDir") }
if(Test-Path $Panel){ Pass("Exists: $Panel") } else { Fail("Missing: $Panel") }

# 2) JSON —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
$t = Read-Json $Tasks
$p = Read-Json $Prots
if($t){
  foreach($k in 'critical_48h','urgent_7d','planned_30d'){
    if($t.PSObject.Properties.Name -notcontains $k){ Fail("Tasks missing key: $k") } else { Pass("Tasks has key: $k") }
  }
}
if($p){ if($p.items){ Pass("Protocols have items: $($p.items.Count)") } else { Fail("Protocols empty or missing 'items'") } }

# 3) –ü—Ä–æ—Ç–æ–∫–æ–ª–∏ —ñ—Å–Ω—É—é—Ç—å
if($p -and $p.items){ foreach($i in $p.items){ $path = Join-Path $Root $i.path; if(Test-Path $path){ Pass("Protocol exists: $($i.path)") } else { Fail("Protocol missing: $($i.path)") } } }

# 4) –ê–Ω–∫–æ—Ä–∏ –∑–≤—ñ—Ç—ñ–≤ (–æ–±—á–∏—Å–ª—é–≤–∞–Ω—ñ)
$now = Get-Date
$week = [System.Globalization.ISOWeek]::GetWeekOfYear($now)
$wk = ('{0:D2}' -f $week)
$weekly = "Reports.md#week-$($now.Year)-W$wk"
$monthly= "Reports.md#month-$($now.ToString('yyyy-MM'))"
Write-Host "[INFO] Weekly anchor: $weekly"
Write-Host "[INFO] Monthly anchor: $monthly"

# 5) –õ–æ–≥–∏ (–æ—Å—Ç–∞–Ω–Ω—ñ 2)
$logs = Get-ChildItem -Path $LogDir -Filter '*.log' -File -ErrorAction SilentlyContinue | Sort-Object LastWriteTime -Descending | Select-Object -First 2
if($logs){ Pass("Logs found: $($logs.Count)") } else { Fail("No logs in $LogDir") }

if($ok){ Write-Host "‚úÖ HEALTH OK" -ForegroundColor Green; exit 0 } else { Write-Host "‚ùå HEALTH FAIL" -ForegroundColor Red; exit 1 }
–ó–∞–ø—É—Å–∫:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
pwsh -NoProfile -ExecutionPolicy Bypass -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Invoke-G04-Health.ps1
‚öôÔ∏è –ü—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∏–π —Ä–∏—Ç–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó
08:15 ‚ÄîGenerate-G04-Tasks.ps1

08:20 ‚ÄîUpdate-G04-Panel.ps1

08:25 ‚Äî Invoke-G04-Health.ps1(–ø–æ–≤–µ—Ä—Ç–∞—î –∫–æ–¥ 0/1; –º–æ–∂–Ω–∞ –ø—ñ–¥—Ö–æ–ø–∏—Ç–∏ —è–∫ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä —É RHYTHM_DASHBOARD)

üö® –ï—Å–∫–∞–ª–∞—Ü—ñ—è ‚ÄîHandle-G04-Escalation.ps1
–í–∏–∫–ª–∏–∫–∞—î –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–æ—Å—Ç—ñ, –ø—Ä–∏ FAIL –¥–æ–¥–∞—î –∑–∞–ø–∏—Å —É RHYTHM_DASHBOARD.md—ñ —Å—Ç–≤–æ—Ä—é—î –∫—Ä–∏—Ç–∏—á–Ω—É –∑–∞–¥–∞—á—É –≤ _data/g04_tasks.json(–∑ –∞–Ω—Ç–∏–¥—É–±–ª—ñ–∫–∞—Ç–æ–º —á–µ—Ä–µ–∑ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è). –í–µ–¥–µ –∂—É—Ä–Ω–∞–ª C03/LOG/G04_ESCALATION.log—ñ —Ä–µ—î—Å—Ç—Ä –µ—Å–∫–∞–ª–∞—Ü—ñ–π _data/g04_escalations.json .


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
[CmdletBinding()]
param(
  [string]$Root = "C:\CHECHA_CORE",
  [string]$HealthScript = "C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Invoke-G04-Health.ps1",
  [int]$CooldownHours = 12,
  [switch]$DryRun
)

function Ensure-Dir($p){ if(-not (Test-Path $p)){ New-Item -ItemType Directory -Force -Path $p | Out-Null } }
function Read-Json($p){ if(Test-Path $p){ try{ Get-Content $p -Raw -Encoding UTF8 | ConvertFrom-Json } catch{ $null } } else { $null } }

$DataDir = Join-Path $Root 'C06_FOCUS\_data'
$TasksJson = Join-Path $DataDir 'g04_tasks.json'
$EscJson   = Join-Path $DataDir 'g04_escalations.json'
$Dash      = Join-Path $Root 'RHYTHM_DASHBOARD.md'
$Hist      = Join-Path $Root 'C03\LOG\G04_ESCALATION.log'

Ensure-Dir $DataDir
Ensure-Dir (Split-Path $Hist -Parent)

# Load state
$tasks = Read-Json $TasksJson; if(-not $tasks){ $tasks = @{ critical_48h=@(); urgent_7d=@(); planned_30d=@() } }
$esc   = Read-Json $EscJson; if(-not $esc){ $esc = @{ items=@() } }

# Run health and capture output
$healthOutput = & pwsh -NoProfile -ExecutionPolicy Bypass -File $HealthScript *>&1
$exit = $LASTEXITCODE

$ts    = Get-Date
$tsStr = $ts.ToString('yyyy-MM-dd HH:mm:ss')

if($exit -eq 0){
  $line = "[$tsStr] G04 health OK"
  if(-not $DryRun){ Add-Content -Encoding UTF8 -Path $Dash -Value $line; Add-Content -Encoding UTF8 -Path $Hist -Value $line }
  Write-Host "OK"; exit 0
}

# Parse FAIL reasons (–¥–æ 3 —Ä—è–¥–∫—ñ–≤)
$failLines = $healthOutput | Where-Object { $_ -match '^\[FAIL\]|HEALTH FAIL' } | Select-Object -First 3
$reason = if($failLines){ ($failLines -join ' | ') } else { 'Unknown failure' }

# Cooldown (–∞–Ω—Ç–∏–¥—É–±–ª—å)
function WithinCooldown($item){ try{ $t=[datetime]::Parse($item.ts) } catch { return $false }; return (($ts - $t).TotalHours -lt $CooldownHours -and $item.reason -eq $reason) }
$dupe = $esc.items | Where-Object { WithinCooldown $_ } | Select-Object -First 1
if($dupe){
  $line = "[$tsStr] G04 health FAIL; SKIP escalate (cooldown); Reason=$reason"
  if(-not $DryRun){ Add-Content -Path $Dash -Encoding UTF8 -Value $line; Add-Content -Path $Hist -Encoding UTF8 -Value $line }
  Write-Warning "Cooldown active"; exit 2
}

# Build new critical task ID
$today  = $ts.ToString('yyyyMMdd')
$prefix = "G04-T-$today-C"
$existingToday = @(); foreach($t in $tasks.critical_48h){ if($t.id -match "^$prefix(?:-(\d+))?$"){ $existingToday += $t } }
$next = 1; $max=0
foreach($t in $existingToday){ if($t.id -match "^$prefix-(\d+)$"){ $n=[int]$Matches[1]; if($n -gt $max){ $max=$n } } }
if($max -gt 0){ $next = $max + 1 }
$id = if($next -eq 1 -and -not ($tasks.critical_48h | Where-Object { $_.id -eq $prefix })) { $prefix } else { "$prefix-$('{0:D2}' -f $next)" }

$eta = ($ts.AddHours(24)).ToString('s') + '+03:00'
$newTask = @{ id=$id; title='–ï—Å–∫–∞–ª–∞—Ü—ñ—è: –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–º–∏–ª–∫–∏ –∑ health-check G04'; owner='On‚Äëduty'; eta=$eta; status='Pending'; notes=$reason }

# Prepend (top) —ñ —Ç—Ä–∏–º–∞—Ç–∏ –ø–µ—Ä—à—ñ 10
$tasks.critical_48h = @($newTask) + @($tasks.critical_48h) | Select-Object -First 10

if(-not $DryRun){
  $tasks | ConvertTo-Json -Depth 6 | Set-Content -Encoding UTF8 $TasksJson
  $esc.items = @(@{ id=$id; ts=$ts.ToString('s'); reason=$reason; cooldown_h=$CooldownHours }) + @($esc.items) | Select-Object -First 50
  $esc | ConvertTo-Json -Depth 6 | Set-Content -Encoding UTF8 $EscJson
  $line = "[$tsStr] G04 health FAIL; Task=$id; Reason=$reason"
  Add-Content -Encoding UTF8 -Path $Dash -Value $line
  Add-Content -Encoding UTF8 -Path $Hist -Value $line
}

Write-Host "Escalated: $id"; exit 1
–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É —Ä–æ–∑–∫–ª–∞–¥
–†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –∑–∞–ø—É—Å–∫–∞—Ç–∏ –ø—ñ—Å–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–Ω–µ–ª—ñ.


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
mkdir C:\CHECHA_CORE\C11\C11_AUTOMATION\G04 -Force
pwsh -NoProfile -ExecutionPolicy Bypass -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Handle-G04-Escalation.ps1 -DryRun

schtasks /Create /TN "G04_HealthEscalate" /SC DAILY /ST 08:25 /RU SYSTEM ^
 /TR "pwsh -NoProfile -ExecutionPolicy Bypass -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Handle-G04-Escalation.ps1"
–†–µ–∑—É–ª—å—Ç–∞—Ç: –ø—Ä–∏ FAIL–∑ º—è–≤–ª—è—î—Ç—å—Å—è –∑–∞–ø–∏—Å —É RHYTHM_DASHBOARD.md—Ñ–æ—Ä–º–∞—Ç—ñ:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
[YYYY-MM-DD HH:MM:SS] G04 health FAIL; Task=G04-T-YYYYMMDD-Cxx; Reason=<–∫–æ—Ä–æ—Ç–∫–æ>
—ñ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫—Ä–∏—Ç–∏—á–Ω—É –∑–∞–¥–∞—á—É _data/g04_tasks.json–∑ ETA +24 –≥–æ–¥–∏–Ω–∏.

üîî –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (Telegram & Email) ‚ÄîNotify-G04.ps1
–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –Ω–æ—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –µ—Å–∫–∞–ª–∞—Ü—ñ–π/–æ–Ω–æ–≤–ª–µ–Ω—å –ø–∞–Ω–µ–ª—ñ. –ü—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è Telegram —Ç–∞ Email. –°–µ–∫—Ä–µ—Ç–∏ ‚Äî —á–µ—Ä–µ–∑ env‚Äë–∑–º—ñ–Ω–Ω—ñ –∞–±–æ _data/g04_notify.json.

–ü—Ä–∏–∫–ª–∞–¥ _data/g04_notify.json:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
{
  "telegram": {"enabled": true, "bot_token": "${ENV:G04_TG_BOT}", "chat_id": "${ENV:G04_TG_CHAT}"},
  "email": {"enabled": false, "smtp_server": "smtp.gmail.com", "port": 587, "from": "dao.gogs.ua@gmail.com", "to": ["you@example.com"], "use_ssl": true}
}

–ö–æ–ø—ñ—é–≤–∞—Ç–∏
[CmdletBinding()]
param(
  [string]$Root = "C:\CHECHA_CORE",
  [switch]$DryRun
)

$ConfigPath = Join-Path $Root 'C06_FOCUS\_data\g04_notify.json'
function Read-Json($p){ if(Test-Path $p){ try{ Get-Content $p -Raw -Encoding UTF8 | ConvertFrom-Json } catch{ $null } } else { $null } }
$CFG = Read-Json $ConfigPath

function Get-EnvOr([string]$name,[string]$fallback){ if($env:$name){ return $env:$name } else { return $fallback } }

function Send-Telegram([string]$text){
  if(-not $CFG.telegram.enabled){ return }
  $token = Get-EnvOr 'G04_TG_BOT' $CFG.telegram.bot_token
  $chat  = Get-EnvOr 'G04_TG_CHAT' $CFG.telegram.chat_id
  if(-not $token -or -not $chat){ Write-Warning 'Telegram not configured'; return }
  $uri = "https://api.telegram.org/bot$token/sendMessage"
  $body = @{ chat_id=$chat; text=$text; disable_web_page_preview=$true }
  if($DryRun){ Write-Host "[DryRun] TG -> $chat: $text" -ForegroundColor Yellow; return }
  try{ Invoke-RestMethod -Method Post -Uri $uri -ContentType 'application/json' -Body ($body | ConvertTo-Json -Depth 5) | Out-Null; Write-Host 'TG sent' -ForegroundColor Green } catch { Write-Warning $_ }
}

function Send-Email([string]$subject,[string]$text){
  if(-not $CFG.email.enabled){ return }
  $srv=$CFG.email.smtp_server; $port=$CFG.email.port; $from=$CFG.email.from; $to=$CFG.email.to -join ','; $ssl=$CFG.email.use_ssl
  $user = Get-EnvOr 'G04_SMTP_USER' $null
  $pass = Get-EnvOr 'G04_SMTP_PASS' $null
  if($DryRun){ Write-Host "[DryRun] MAIL -> $to | $subject" -ForegroundColor Yellow; return }
  try{
    Send-MailMessage -SmtpServer $srv -Port $port -UseSsl:$ssl -From $from -To $to -Subject $subject -Body $text -Encoding UTF8 -Credential (New-Object System.Management.Automation.PSCredential($user,(ConvertTo-SecureString $pass -AsPlainText -Force)))
    Write-Host 'Email sent' -ForegroundColor Green
  } catch { Write-Warning $_ }
}

function Send-G04Notification([string]$title,[string]$text,[string[]]$channels=@('Telegram','Email')){
  $stamp = (Get-Date).ToString('yyyy-MM-dd HH:mm:ss')
  $msg = "[$stamp] $title`n$text"
  if($channels -contains 'Telegram'){ Send-Telegram $msg }
  if($channels -contains 'Email'){ Send-Email $title $msg }
}

Export-ModuleMember -Function Send-G04Notification
–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–µ–∫—Ä–µ—Ç—ñ–≤ (User env):


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
[Environment]::SetEnvironmentVariable('G04_TG_BOT','<bot-token>','User')
[Environment]::SetEnvironmentVariable('G04_TG_CHAT','<chat-id>','User')
# –ó–∞ –ø–æ—Ç—Ä–µ–±–∏ email:
[Environment]::SetEnvironmentVariable('G04_SMTP_USER','dao.gogs.ua@gmail.com','User')
[Environment]::SetEnvironmentVariable('G04_SMTP_PASS','<app-password>','User')
–¢–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
pwsh -NoProfile -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Notify-G04.ps1 -DryRun
üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –µ—Å–∫–∞–ª–∞—Ü—ñ–π ‚Äî Build-G04-Stats.ps1+Update-G04-Panel.ps1 (v1.1)
–§–æ—Ä–º—É—î _data/g04_stats.json—ñ –≤–∏–≤–æ–¥–∏—Ç—å —Å–µ–∫—Ü—ñ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –ø–∞–Ω–µ–ª—ñ (–∑–∞ 24 —Ä–æ–∫–∏, 7 –¥–Ω—ñ–≤, 30 –¥–Ω—ñ–≤ + –æ—Å—Ç–∞–Ω–Ω—è –ø—Ä–∏—á–∏–Ω–∞; –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö).


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
# Build-G04-Stats.ps1
[CmdletBinding()]param([string]$Root='C:\CHECHA_CORE')
$Data=Join-Path $Root 'C06_FOCUS\_data'; $Esc=Join-Path $Data 'g04_escalations.json'; $Tasks=Join-Path $Data 'g04_tasks.json'; $Out=Join-Path $Data 'g04_stats.json'
function RJ($p){ if(Test-Path $p){ Get-Content $p -Raw -Encoding UTF8 | ConvertFrom-Json } }
$e=RJ $Esc; $t=RJ $Tasks; $now=Get-Date
$items = @(); if($e -and $e.items){ $items=$e.items }
function Cnt($d){ ($items | Where-Object { try{ ([datetime]$_.ts) -gt $d } catch { $false } }).Count }
$openCrit = 0; if($t -and $t.critical_48h){ $openCrit = ($t.critical_48h | Where-Object { $_.status -match 'Pending|In-Progress' }).Count }
$out = [ordered]@{
  last24h = Cnt($now.AddHours(-24));
  last7d  = Cnt($now.AddDays(-7));
  last30d = Cnt($now.AddDays(-30));
  last_reason = $(if($items){ $items[0].reason } else { $null });
  open_critical = $openCrit
}
$out | ConvertTo-Json -Depth 4 | Set-Content -Encoding UTF8 $Out
Write-Host "‚úÖ $Out"
Update-G04-Panel.ps1 (v1.1)‚Äî —Å–µ–∫—Ü—ñ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–≤—Å—Ç–∞–≤–ª–µ–Ω–∞ ‚Äã‚Äã–ø—ñ—Å–ª—è –ª–æ–≥—ñ–≤):


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
# ... —É –≤–µ—Ä—Ö–Ω—ñ–π —á–∞—Å—Ç–∏–Ω—ñ –¥–æ–¥–∞—Ç–∏ –ø–æ—Ä—É—á –∑ —ñ–Ω—à–∏–º–∏ —à–ª—è—Ö–∞–º–∏:
$StatsJson = Join-Path $DataDir 'g04_stats.json'
$S = if(Test-Path $StatsJson){ try{ Get-Content $StatsJson -Raw | ConvertFrom-Json } catch { $null } } else { $null }

# ... –ø—ñ—Å–ª—è –±–ª–æ–∫—É "# Logs digest section" —Ç–∞ –ø–µ—Ä–µ–¥ # Output –¥–æ–¥–∞—Ç–∏:
$md += "
## üìà –ï—Å–∫–∞–ª–∞—Ü—ñ—ó ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
if($S){
  $md += "- –ó–∞ 24 –≥–æ–¥: **$($S.last24h)**"
  $md += "- –ó–∞ 7 –¥–Ω—ñ–≤: **$($S.last7d)**"
  $md += "- –ó–∞ 30 –¥–Ω—ñ–≤: **$($S.last30d)**"
  if($S.last_reason){ $md += "- –û—Å—Ç–∞–Ω–Ω—è –ø—Ä–∏—á–∏–Ω–∞: $($S.last_reason)" }
  $md += "- –í—ñ–¥–∫—Ä–∏—Ç—ñ –∫—Ä–∏—Ç–∏—á–Ω—ñ: **$($S.open_critical)**"
} else {
  $md += "- (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —â–µ –Ω–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ)"
}
–†–æ–∑–∫–ª–∞–¥ (–¥–æ–ø–æ–≤–Ω–µ–Ω–Ω—è):


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ 08:18
schtasks /Create /TN "G04_BuildStats" /SC DAILY /ST 08:18 /RU SYSTEM ^
 /TR "pwsh -NoProfile -ExecutionPolicy Bypass -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Build-G04-Stats.ps1"

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–Ω–µ–ª—ñ –∑–∞–ª–∏—à–∞—î–º–æ –Ω–∞ 08:20 (–≤–∂–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ)
üîó –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –Ω–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ–π –≤ –µ—Å–∫–∞–ª–∞—Ü—ñ—é
–î–æ–¥–∞–π —É Handle-G04-Escalation.ps1–ø—ñ—Å–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è $newTask:


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
# Notify (Telegram / Email)
$Notify = 'C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Notify-G04.ps1'
. $Notify
$ttl = "[G04] HEALTH FAIL ‚Äî $id"
$txt = "–ü—Ä–∏—á–∏–Ω–∞: $reason`nETA: $eta`nOwner: On-duty"
Send-G04Notification -title $ttl -text $txt -channels @('Telegram')
–¢–µ—Å—Ç–æ–≤—ñ –Ω–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó (DryRun):


–ö–æ–ø—ñ—é–≤–∞—Ç–∏
pwsh -NoProfile -File C:\CHECHA_CORE\C11\C11_AUTOMATION\G04\Notify-G04.ps1 -DryRun
W36)
–ß–∞—Å/–∑–æ–Ω–∞: 03.09.2025, –ö–∏—ó–≤ (UTC+3)
 –ú–æ–¥—É–ª—å: G04 ‚Äî DAO‚Äë
 –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—è –í–ª–∞—Å–Ω–∏–∫ –∑–≤—ñ—Ç—É: G04‚ÄëCoordinator (TBD)

1) –ü—ñ–¥—Å—É–º–æ–∫ (–†–µ–∑—é–º–µ)
–ü–∞–Ω–µ–ª—å –∞–∫—Ç–∏–≤–Ω–∞ ; —É —Ä–æ–±–æ—Ç—ñ 3 –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö (2 In‚ÄëProgress, 1 Pending), 3 —Ç–µ—Ä–º—ñ–Ω–æ–≤–∏—Ö (–∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∏—Ö), 3 –ø–ª–∞–Ω–æ–≤–∏—Ö (–∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∏—Ö).

–ì–æ–ª–æ–≤–Ω—ñ —Ä–∏–∑–∏–∫–∏: –ø–æ—Ä–æ–∂–Ω—ñ ZIP —É —Ä–µ–ª—ñ–∑–∞—Ö DAO‚ÄëGallery , –Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞ –∑–∞—Ö–∏—Å—Ç—É –≥—ñ–ª–æ–∫ , –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —É check_release.ps1.

–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ —É–≤—ñ–º–∫–Ω—É—Ç–∏ —â–æ—Ä—ñ—á–Ω–∏–π —Ä–∏—Ç–º –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞–Ω–µ–ª—ñ —Ç–∞ –µ—Å–∫–∞–ª–∞—Ü—ñ—é –ø—Ä–∏ HEALTH FAIL .

2) –°—Ç–∞–Ω –ø—Ä–∞—Ü—é—î
üö® –ö—Ä–∏—Ç–∏—á–Ω—ñ (48 —Ä–æ–∫—ñ–≤)

G04‚ÄëT‚Äë20250903‚ÄëC01 ‚Äî –í–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ ZIP —É —Ä–µ–ª—ñ–∑–∞—Ö DAO‚ÄëGallery ( SYMBOLS/ANIM/BRAND), –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ dist—ñ –∞–∫—Ç–∏–≤–∏ —É Release ‚Äî –≤–ª–∞—Å–Ω–∏–∫: –°.–ß. ‚Äî ETA: 04.09, 18:00 ‚Äî –°—Ç–∞—Ç—É—Å: In‚ÄëProgress ‚Äî –ü—Ä–∏–º—ñ—Ç–∫–∞: logi 2025‚Äë09‚Äë02 (DAO‚ÄëGallery)


G04‚ÄëT‚Äë20250903‚ÄëC02 ‚Äî –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∑–∞—Ö–∏—Å—Ç –≤—ñ–¥–≥–∞–ª—É–∂–µ–Ω–Ω—è –¥–ª—è Checha-hub-DAO/checha_core(–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –ø–æ–≥–æ–¥–∂–µ–Ω–Ω—è) ‚Äî –≤–ª–∞—Å–Ω–∏–∫: –°.–ß. ‚Äî ETA: 04.09, 20:00 ‚Äî –°—Ç–∞—Ç—É—Å: In-Progress ‚Äî –ü—Ä–∏–º—ñ—Ç–∫–∞: 0902T08 CI/CD


G04‚ÄëT‚Äë20250903‚ÄëC03 ‚Äî –í–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ tools/check_release.ps1(—É–∑–≥–æ–¥–∏—Ç–∏ –Ω–∞–∑–≤–∏/–ø–∞—Ä–∞–º–µ—Ç—Ä–∏; —Ç–µ—Å—Ç –∑ ethno-v1.2) ‚Äî –≤–ª–∞—Å–Ω–∏–∫: –°.–ß. ‚Äî ETA: 05.09, 12:00 ‚Äî –°—Ç–∞—Ç—É—Å: –í –æ—á—ñ–∫—É–≤–∞–Ω–Ω—ñ ‚Äî –ü—Ä–∏–º—ñ—Ç–∫–∞: –ø–æ–º–∏–ª–∫–∞-ZipName

‚ö†Ô∏è –¢–µ—Ä–º—ñ–Ω–æ–≤—ñ (7 –¥–Ω—ñ–≤)

G04‚ÄëT‚Äë20250903‚ÄëU01 ‚Äî –û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É G04 ‚Äî –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—è DAO —É GitBook (README, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –∑–≤‚Äô—è–∑–∫–∏) ‚Äî –¥–µ–¥–ª–∞–π–Ω: 2025-09-09 ‚Äî –°—Ç–∞—Ç—É—Å: –ø–ª–∞–Ω—É—î—Ç—å—Å—è


G04‚ÄëT‚Äë20250903‚ÄëU02 ‚Äî –ü—Ä–∏–≤‚Äô—è–∑–∞—Ç–∏ –ø–∞–Ω–µ–ª—å –¥–æ DAO‚Äë–ñ—É—Ä–Ω–∞–ª—É (—è–∫—ñ —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏/—Ä—ñ—à–µ–Ω–Ω—è, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∏) ‚Äî –¥–µ–¥–ª–∞–π–Ω: 2025‚Äë09‚Äë10 ‚Äî –°—Ç–∞—Ç—É—Å: –ü–ª–∞–Ω—É—î—Ç—å—Å—è


G04‚ÄëT‚Äë20250903‚ÄëU03 ‚Äî –£—Å—É–Ω—É—Ç–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è —à–ª—è—Ö—ñ–≤ C12/Protocols–ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ MinIO ‚Äî –¥–µ–¥–ª–∞–π–Ω: 2025‚Äë09‚Äë08 ‚Äî –°—Ç–∞—Ç—É—Å: –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ

üü¢ –ü–ª–∞–Ω–æ–≤—ñ (30 –¥–Ω—ñ–≤)

G04‚ÄëT‚Äë20250903‚ÄëP01 ‚Äî –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ G06 (–∞–≤—Ç–æ–∑–±—ñ—Ä –∑–∞–≤–¥–∞–Ω—å/–∑–≤–µ–¥–µ–Ω–Ω—è —ñ–∑ –∞–≥–µ–Ω—Ç—ñ–≤) ‚Äî –°—Ç–∞—Ç—É—Å: –ü–ª–∞–Ω—É—î—Ç—å—Å—è


G04‚ÄëT‚Äë20250903‚ÄëP02 ‚Äî –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ G11 (—Ä–æ–ª—å–æ–≤—ñ –ø–æ–≤–Ω–æ–≤–∞–∂–µ–Ω–Ω—è —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å) ‚Äî –°—Ç–∞—Ç—É—Å: –ø–ª–∞–Ω—É—î—Ç—å—Å—è


G04‚ÄëT‚Äë20250903‚ÄëP03 ‚Äî –°—Ç–∞–±—ñ–ª—ñ–∑—É–≤–∞—Ç–∏ RHYTHM_DASHBOARD —ñ –¥–æ–¥–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –æ–ø–æ–≤—ñ—â–µ–Ω–Ω—è (–∑–¥–æ—Ä–æ–≤‚Äô—è) ‚Äî –°—Ç–∞—Ç—É—Å: –ø–ª–∞–Ω—É—î—Ç—å—Å—è

3) –ú–µ—Ç—Ä–∏–∫–∏ —Å—Ç–∞–Ω—É (–Ω–∞ 03.09.2025)
–í—ñ–¥–∫—Ä–∏—Ç—ñ –∫—Ä–∏—Ç–∏—á–Ω—ñ: 3 (In-Progress: 2, Pending: 1)

–í—ñ–¥–∫—Ä–∏—Ç–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ: 3 (–∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ)

–í—ñ–¥–∫—Ä–∏—Ç–∏ –ø–ª–∞–Ω–æ–≤—ñ: 3 (–ü–ª–∞–Ω—É—î—Ç—å—Å—è)

–û—Å—Ç–∞–Ω–Ω—è –µ—Å–∫–∞–ª–∞—Ü—ñ—è: —Ä–µ—î—Å—Ç—Ä –Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ (–ø–æ—á–∞—Ç–∫–æ–≤–µ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è)

–ü—Ä–∏–º—ñ—Ç–∫–∞: –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É Build-G04-Stats.ps1–≤–∏–≤–æ–¥—è—Ç—å—Å—è ¬´–ó–∞ 24 —Ä–æ–∫–∏ / 7 –¥–Ω—ñ–≤ / 30 –¥–Ω—ñ–≤¬ª —Ç–∞ ¬´–û—Å—Ç–∞–Ω–Ω—è –ø—Ä–∏—á–∏–Ω–∞¬ª.

4) –†–∏–∑–∏–∫–∏ —Ç–∞ –∑–∞–ø–æ–±—ñ–∂–Ω—ñ –¥—ñ—ó
–ü–æ—Ä–æ–∂–Ω—ñ–π ZIP —É DAO‚ÄëGallery ‚Üí –ú—ñ—Ç–∏–≥–∞—Ü—ñ—è: –ø–æ–≤—Ç–æ—Ä–Ω–∞ –∑–±—ñ—Ä–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ dist, –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –†–µ–ª—ñ–∑ –∞–∫—Ç–∏–≤—ñ–≤ (C01).

–ó–∞—Ö–∏—Å—Ç –≥—ñ–ª–æ–∫ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ‚Üí –ü–æ–º'—è–∫—à–µ–Ω–Ω—è: –∑–∞—Ç–≤–µ—Ä–¥–∏—Ç–∏ –≤–∏–º–æ–≥–∏ ( –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ , –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –∑–∞—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è ) —ñ –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ (C02).

–ù–µ–≤—ñ—Ä–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏check_release.ps1 ‚Üí –ú—ñ—Ç–∏–≥–∞—Ü—ñ—è: —É–∑–≥–æ–¥–∏—Ç–∏ –Ω–∞–∑–≤–∏/–ø–∞—Ä–∞–º–µ—Ç—Ä–∏, –∑—Ä–æ–±–∏—Ç–∏ —Ç–µ—Å—Ç —ñ–∑ ethno-v1.2(C03).

5) –†—ñ—à–µ–Ω–Ω—è/–ø–æ–≥–æ–¥–∂–µ–Ω–Ω—è, —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –Ω–∞–±—ñ—Ä –ø—Ä–∞–≤–∏–ª –∑–∞—Ö–∏—Å—Ç—É –≥—ñ–ª–æ–∫ –¥–ª—è checha_core(G11 / –ª—ñ–¥–µ—Ä—Å—Ç–≤–æ).

‚úÖ –ü–æ–≥–æ–¥–∏—Ç–∏ –ø—É–±–ª—ñ—á–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏ G04 —É GitBook (G09 / –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—ó).

6) –ü–ª–∞–Ω –Ω–∞ 48 –≥–æ–¥
C01: –ø–µ—Ä–µ–≤–∏–ø—É—Å–∫ ZIP –¥–ª—è SYMBOLS/ANIM/BRAND, –≤–∞–ª—ñ–¥–∞—Ü—ñ—è —Ä–µ–ª—ñ–∑—É ‚Äî –≤–ª–∞—Å–Ω–∏–∫: –°.–ß. ‚Äî –¥–æ 04.09 18:00 .

C02: —É–≤—ñ–º–∫–Ω—É—Ç–∏ –∑–∞—Ö–∏—Å—Ç –≥—ñ–ª–æ–∫ (–æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ + —Ö–≤ —É–∑–≥–æ–¥–∂–µ–Ω–Ω—è) ‚Äî –≤–ª–∞—Å–Ω–∏–∫: –°.–ß. ‚Äî –¥–æ 04.09 20:00 .

C03: –≤—ñ–¥–ª–∞–≥–æ–¥–∏—Ç–∏ check_release.ps1, –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ ethno-v1.2‚Äî –≤–ª–∞—Å–Ω–∏–∫: –°.–ß. ‚Äî –¥–æ 05.09 12:00 .

–ù–∞ –≤–∏–±—ñ—Ä —Ä–æ–∑–∫–ª–∞–¥: 08:15 Generate ‚Üí 08:18 Build‚ÄëStats ‚Üí 08:20 Update‚ÄëPanel ‚Üí 08:25 Health‚ÄëEscalate.

7) –ü–æ—Å–∏–ª–∞–Ω–Ω—è/—è–∫—ñ –∑–≤—ñ—Ç–∏
–©–æ—Ç–∏–∂–Ω–µ–≤–∏–π:Reports.md#week-2025-W36

–©–æ–º—ñ—Å—è—á–Ω–∏–π:Reports.md#month-2025-09

8) –î–æ–¥–∞—Ç–∫–∏
–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è: G06 , G09 , G11 .

–õ–æ–≥–∏/—Ç–µ–ª–µ–º–µ—Ç—Ä—ñ—è: C03/LOG/*(–¥–æ–¥–∞–π—Ç–µ –≤ —Ä–æ–∑–∫–ª–∞–¥ Build-G04-Stats.ps1–¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –µ—Å–∫–∞–ª–∞—Ü—ñ–π).

–°–∫–∞–∂–∏, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è GitBook –∞–±–æ PDF ‚Äî –ø—ñ–¥–≥–æ—Ç—É